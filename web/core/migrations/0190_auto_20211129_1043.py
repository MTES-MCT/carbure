# Generated by Django 3.2.8 on 2021-11-29 09:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('producers', '0024_productionsite_address'),
        ('core', '0189_auto_20211022_1534'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarbureLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('year', models.IntegerField()),
                ('carbure_id', models.CharField(blank=True, default='', max_length=64)),
                ('unknown_producer', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('unknown_production_site', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('production_site_commissioning_date', models.DateField(blank=True, null=True)),
                ('production_site_certificate', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('production_site_certificate_type', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('production_site_double_counting_certificate', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('unknown_supplier', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('supplier_certificate', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('supplier_certificate_type', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('transport_document_type', models.CharField(choices=[('DAU', 'DAU'), ('DAE', 'DAE'), ('DSA', 'DSA'), ('DSAC', 'DSAC'), ('DSP', 'DSP'), ('OTHER', 'OTHER')], default='DAE', max_length=12)),
                ('transport_document_reference', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('unknown_client', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('dispatch_date', models.DateField(blank=True, null=True)),
                ('unknown_dispatch_site', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('unknown_delivery_site', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('lot_status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PENDING', 'PENDING'), ('ACCEPTED', 'ACCEPTED'), ('REJECTED', 'REJECTED'), ('FROZEN', 'FROZEN'), ('DELETED', 'DELETED')], default='DRAFT', max_length=24)),
                ('correction_status', models.CharField(choices=[('NO_PROBLEMO', 'NO_PROBLEMO'), ('IN_CORRECTION', 'IN_CORRECTION'), ('FIXED', 'FIXED')], default='NO_PROBLEMO', max_length=64)),
                ('delivery_type', models.CharField(choices=[('UNKNOWN', 'UNKNOWN'), ('RFC', 'RFC'), ('STOCK', 'STOCK'), ('BLENDING', 'BLENDING'), ('EXPORT', 'EXPORT'), ('TRADING', 'TRADING'), ('PROCESSING', 'PROCESSING'), ('DIRECT', 'DIRECT'), ('FLUSHED', 'FLUSHED')], default='UNKNOWN', max_length=64)),
                ('declared_by_supplier', models.BooleanField(default=False)),
                ('declared_by_client', models.BooleanField(default=False)),
                ('volume', models.FloatField(default=0.0)),
                ('weight', models.FloatField(default=0.0)),
                ('lhv_amount', models.FloatField(default=0.0)),
                ('eec', models.FloatField(default=0.0)),
                ('el', models.FloatField(default=0.0)),
                ('ep', models.FloatField(default=0.0)),
                ('etd', models.FloatField(default=0.0)),
                ('eu', models.FloatField(default=0.0)),
                ('esca', models.FloatField(default=0.0)),
                ('eccs', models.FloatField(default=0.0)),
                ('eccr', models.FloatField(default=0.0)),
                ('eee', models.FloatField(default=0.0)),
                ('ghg_total', models.FloatField(default=0.0)),
                ('ghg_reference', models.FloatField(default=0.0)),
                ('ghg_reduction', models.FloatField(default=0.0)),
                ('ghg_reference_red_ii', models.FloatField(default=0.0)),
                ('ghg_reduction_red_ii', models.FloatField(default=0.0)),
                ('free_field', models.TextField(blank=True, default=None, null=True)),
                ('highlighted_by_admin', models.BooleanField(default=False)),
                ('highlighted_by_auditor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'CarbureLot',
                'verbose_name_plural': 'CarbureLots',
                'db_table': 'carbure_lots',
            },
        ),
        migrations.CreateModel(
            name='CarbureLotComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.CharField(choices=[('REGULAR', 'REGULAR'), ('AUDITOR', 'AUDITOR'), ('ADMIN', 'ADMIN')], default='REGULAR', max_length=16)),
                ('comment_dt', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('is_visible_by_admin', models.BooleanField(default=False)),
                ('is_visible_by_auditor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'CarbureLotComment',
                'verbose_name_plural': 'CarbureLotComments',
                'db_table': 'carbure_lots_comments',
            },
        ),
        migrations.CreateModel(
            name='CarbureLotEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('CREATED', 'CREATED'), ('UPDATED', 'UPDATED'), ('VALIDATED', 'VALIDATED'), ('FIX_REQUESTED', 'FIX_REQUESTED'), ('MARKED_AS_FIXED', 'MARKED_AS_FIXED'), ('FIX_ACCEPTED', 'FIX_ACCEPTED'), ('ACCEPTED', 'ACCEPTED'), ('REJECTED', 'REJECTED'), ('RECALLED', 'RECALLED'), ('DECLARED', 'DECLARED'), ('DELETED', 'DELETED'), ('DECLCANCEL', 'DECLCANCEL'), ('RESTORED', 'RESTORED')], max_length=32)),
                ('event_dt', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CarbureLotEvent',
                'verbose_name_plural': 'CarbureLotEvents',
                'db_table': 'carbure_lots_events',
            },
        ),
        migrations.CreateModel(
            name='CarbureNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_dt', models.DateTimeField(auto_now_add=True)),
                ('send_copy_to_admin', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Carbure Email Notification',
                'verbose_name_plural': 'Cabure Email Notifications',
                'db_table': 'carbure_notifications',
            },
        ),
        migrations.CreateModel(
            name='CarbureStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carbure_id', models.CharField(default='', max_length=64)),
                ('remaining_volume', models.FloatField(default=0.0)),
                ('remaining_weight', models.FloatField(default=0.0)),
                ('remaining_lhv_amount', models.FloatField(default=0.0)),
                ('unknown_production_site', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('unknown_supplier', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('ghg_reduction', models.FloatField(default=0.0)),
                ('ghg_reduction_red_ii', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'CarbureStock',
                'verbose_name_plural': 'CarbureStocks',
                'db_table': 'carbure_stock',
            },
        ),
        migrations.CreateModel(
            name='CarbureStockEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('CREATED', 'CREATED'), ('UPDATED', 'UPDATED'), ('SPLIT', 'SPLIT'), ('UNSPLIT', 'UNSPLIT'), ('FLUSHED', 'FLUSHED'), ('TRANSFORMED', 'TRANSFORMED'), ('UNTRANSFORMED', 'UNTRANSFORMED')], max_length=32)),
                ('event_dt', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CarbureStockEvent',
                'verbose_name_plural': 'CarbureStockEvents',
                'db_table': 'carbure_stock_events',
            },
        ),
        migrations.CreateModel(
            name='CarbureStockTransformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transformation_type', models.CharField(choices=[('UNKNOWN', 'UNKNOWN'), ('ETH_ETBE', 'ETH_ETBE')], default='UNKNOWN', max_length=32)),
                ('volume_deducted_from_source', models.FloatField(default=0.0)),
                ('volume_destination', models.FloatField(default=0.0)),
                ('metadata', models.JSONField()),
                ('transformation_dt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'CarbureStockTransformation',
                'verbose_name_plural': 'CarbureStockTransformation',
                'db_table': 'carbure_stock_transformations',
            },
        ),
        migrations.CreateModel(
            name='EntityCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'CarbureEntityCertificates',
                'verbose_name_plural': 'CarbureEntityCertificates',
                'db_table': 'carbure_entity_certificates',
            },
        ),
        migrations.CreateModel(
            name='GenericCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.CharField(max_length=64)),
                ('certificate_type', models.CharField(choices=[('SYSTEME_NATIONAL', 'SYSTEME_NATIONAL'), ('ISCC', 'ISCC'), ('REDCERT', 'REDCERT'), ('2BS', '2BS')], max_length=32)),
                ('certificate_holder', models.CharField(max_length=512)),
                ('certificate_issuer', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('download_link', models.CharField(default=None, max_length=512, null=True)),
                ('scope', models.JSONField(null=True)),
                ('input', models.JSONField(null=True)),
                ('output', models.JSONField(null=True)),
            ],
            options={
                'verbose_name': 'CarbureCertificates',
                'verbose_name_plural': 'CarbureCertificates',
                'db_table': 'carbure_certificates',
            },
        ),
        migrations.AddField(
            model_name='biocarburant',
            name='dgddi_category',
            field=models.CharField(blank=True, default=None, max_length=8, null=True),
        ),
        migrations.AddField(
            model_name='depot',
            name='accise',
            field=models.CharField(blank=True, default=None, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='matierepremiere',
            name='dgddi_category',
            field=models.CharField(blank=True, default=None, max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='genericerror',
            name='tx',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.lottransaction'),
        ),
        migrations.AddIndex(
            model_name='genericcertificate',
            index=models.Index(fields=['certificate_type'], name='carbure_cer_certifi_e5a0bd_idx'),
        ),
        migrations.AddField(
            model_name='entitycertificate',
            name='certificate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genericcertificate'),
        ),
        migrations.AddField(
            model_name='entitycertificate',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburestocktransformation',
            name='dest_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dest_stock', to='core.carburestock'),
        ),
        migrations.AddField(
            model_name='carburestocktransformation',
            name='entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburestocktransformation',
            name='source_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_stock', to='core.carburestock'),
        ),
        migrations.AddField(
            model_name='carburestocktransformation',
            name='transformed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='carburestockevent',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.carburestock'),
        ),
        migrations.AddField(
            model_name='carburestockevent',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='biofuel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.biocarburant'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='carbure_client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_carbure_client', to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='carbure_production_site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='producers.productionsite'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='carbure_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_carbure_supplier', to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='country_of_origin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_country_of_origin', to='core.pays'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='depot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.depot'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='feedstock',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.matierepremiere'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='parent_lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.carburelot'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='parent_transformation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.carburestocktransformation'),
        ),
        migrations.AddField(
            model_name='carburestock',
            name='production_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_production_country', to='core.pays'),
        ),
        migrations.AddField(
            model_name='carburenotification',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.carburelotevent'),
        ),
        migrations.AddField(
            model_name='carburenotification',
            name='recipient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelotevent',
            name='lot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.carburelot'),
        ),
        migrations.AddField(
            model_name='carburelotevent',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='carburelotcomment',
            name='entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelotcomment',
            name='lot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.carburelot'),
        ),
        migrations.AddField(
            model_name='carburelotcomment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='added_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='biofuel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.biocarburant'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_client',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carbure_client', to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_delivery_site',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carbure_delivery_site', to='core.depot'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_dispatch_site',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carbure_dispatch_site', to='core.depot'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_producer',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carbure_producer', to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_production_site',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='producers.productionsite'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='carbure_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carbure_supplier', to='core.entity'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='country_of_origin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_of_origin', to='core.pays'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='delivery_site_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivery_site_country', to='core.pays'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='dispatch_site_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispatch_site_country', to='core.pays'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='feedstock',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.matierepremiere'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='parent_lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.carburelot'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='parent_stock',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.carburestock'),
        ),
        migrations.AddField(
            model_name='carburelot',
            name='production_country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_country', to='core.pays'),
        ),
        migrations.AddField(
            model_name='genericerror',
            name='lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.carburelot'),
        ),
        migrations.AddIndex(
            model_name='entitycertificate',
            index=models.Index(fields=['entity'], name='carbure_ent_entity__461638_idx'),
        ),
        migrations.AddIndex(
            model_name='carburestocktransformation',
            index=models.Index(fields=['entity'], name='carbure_sto_entity__2e8758_idx'),
        ),
        migrations.AddIndex(
            model_name='carburestockevent',
            index=models.Index(fields=['stock'], name='carbure_sto_stock_i_d107a1_idx'),
        ),
        migrations.AddIndex(
            model_name='carburestock',
            index=models.Index(fields=['carbure_client'], name='carbure_sto_carbure_c4b133_idx'),
        ),
        migrations.AddIndex(
            model_name='carburestock',
            index=models.Index(fields=['carbure_client', 'depot'], name='carbure_sto_carbure_3458dd_idx'),
        ),
        migrations.AddIndex(
            model_name='carburenotification',
            index=models.Index(fields=['is_sent'], name='carbure_not_is_sent_e22c04_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelotevent',
            index=models.Index(fields=['lot'], name='carbure_lot_lot_id_2f39a7_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelotcomment',
            index=models.Index(fields=['lot'], name='carbure_lot_lot_id_dcf25a_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year'], name='carbure_lot_year_870bf1_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year', 'carbure_client'], name='carbure_lot_year_a09da3_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year', 'carbure_supplier'], name='carbure_lot_year_a3ccca_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year', 'period'], name='carbure_lot_year_91dbd3_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year', 'period', 'carbure_client'], name='carbure_lot_year_93dd77_idx'),
        ),
        migrations.AddIndex(
            model_name='carburelot',
            index=models.Index(fields=['year', 'period', 'carbure_supplier'], name='carbure_lot_year_2a6c87_idx'),
        ),
    ]

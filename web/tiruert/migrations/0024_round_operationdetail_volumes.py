# Generated by Django 5.2.2 on 2025-10-15

from decimal import ROUND_HALF_UP, Decimal

from django.db import migrations


def round_volumes_to_2_decimals(apps, schema_editor):
    """
    Round all existing OperationDetail volumes to 2 decimal places.
    """
    OperationDetail = apps.get_model("tiruert", "OperationDetail")

    # Process in batches to avoid memory issues with large datasets
    batch_size = 1000
    details_to_update = []

    for detail in OperationDetail.objects.all().iterator(chunk_size=batch_size):
        # Use Decimal for precise rounding to 2 decimal places
        rounded_volume = float(Decimal(str(detail.volume)).quantize(Decimal("0.01"), rounding=ROUND_HALF_UP))

        # Only update if the value actually changes
        if detail.volume != rounded_volume:
            detail.volume = rounded_volume
            details_to_update.append(detail)

        # Batch update every 1000 records
        if len(details_to_update) >= batch_size:
            OperationDetail.objects.bulk_update(details_to_update, ["volume"])
            details_to_update = []

    # Update remaining records
    if details_to_update:
        OperationDetail.objects.bulk_update(details_to_update, ["volume"])


class Migration(migrations.Migration):
    dependencies = [
        ("tiruert", "0023_alter_operation_status"),
    ]

    operations = [
        migrations.RunPython(round_volumes_to_2_decimals),
    ]

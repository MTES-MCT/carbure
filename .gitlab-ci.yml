stages:
  - prepare
  - check
  - deploy

workflow:
  rules:
  # 1. Don't run pipelines for MR drafts.
  # 2. Don't run branch pipelines when there's an open MR for the branch (run the MR pipeline instead).
  # 3. Run all other MR pipelines
  # 4. Run branch pipelines for dev, preview and master
  # 5. Else, don't run it
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /^Draft:/ # 1
      when: never
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS # 2
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' # 3
      when: always
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "preview" || $CI_COMMIT_BRANCH == "master" # 4
      when: always
    - when: never # 5

variables:
  MYSQL_DATABASE: carbure_mysql_test_db
  MYSQL_ROOT_PASSWORD: carbure_mysql_ci_db_password

# use prebuild CI image when running checks
.checks:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/ci-image:latest
  before_script:
    - mv /app/.venv ./.venv
    - mv /app/front/node_modules ./front

# prepare git env to push new code to scalingo
.scalingo:
  image: alpine:latest
  before_script:
    - mkdir ~/.ssh
    - apk add --update git openssh-client
    - eval $(ssh-agent -s)
    - echo "$SCALINGO_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan $SCALINGO_SSH_HOST $SCALINGO_SSH_HOST_SECNUMCLOUD >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name $GIT_USER_NAME
    - git config user.email $GIT_USER_EMAIL
    - git remote add scalingo-dev $SCALINGO_GIT_REMOTE_DEV || true
    - git remote add scalingo-staging $SCALINGO_GIT_REMOTE_STAGING || true
    - git remote add scalingo-prod $SCALINGO_GIT_REMOTE_PROD || true
    - git fetch origin $CI_COMMIT_BRANCH --unshallow
    - git checkout $CI_COMMIT_BRANCH

build-ci-image:
  stage: prepare
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f ci/Dockerfile -t $CI_REGISTRY/$CI_PROJECT_PATH/ci-image:latest .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/ci-image:latest    
  rules:
    - changes: 
      - ci/Dockerfile
      - Pipfile
      - Pipfile.lock
      - front/package.json
      - front/package-lock.json

check-backend:
  stage: check
  extends: .checks
  services:
    - mysql:8.0
    - redis:latest
  script:
    - export CARBURE_HOME=$(pwd)
    - export DATABASE_URL=mysql://root:$MYSQL_ROOT_PASSWORD@mysql:3306/$MYSQL_DATABASE
    - export REDIS_URL=redis://redis:6379
    - pipenv run ruff check
    - pipenv run ruff format --check
    - TEST=1 pipenv run python web/manage.py test web
  rules:
    - changes:
      - web/**/*
    
check-frontend:
  stage: check
  extends: .checks
  script:
    - cd front
    - npx eslint --ext .ts,.tsx src/
    - npm test
  rules:
    - changes:
      - front/**/*

deploy-dev:
  stage: deploy
  extends: .scalingo
  only:
    - dev
    - preview
  script:
    - git push scalingo-dev $CI_COMMIT_BRANCH:master -f

deploy-staging:
  stage: deploy
  extends: .scalingo
  only:
    - master
  script:
    - git push scalingo-staging master -f

deploy-prod:
  stage: deploy
  extends: .scalingo
  when: manual
  only:
    - master
  script:
    - git push scalingo-prod master -f

# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/user/application_security/secret_detection/pipeline/configure
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
:stages:
- check
- pass
:workflow:
  :rules:
  - :if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~
      /^Draft:/
    :when: never
  - :if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
    :when: never
  - :if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"
    :when: always
  - :if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "master"
    :when: always
  - :when: never
:variables:
  :MYSQL_DATABASE: carbure_mysql_test_db
  :MYSQL_ROOT_PASSWORD: carbure_mysql_ci_db_password
  :PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  :PIPENV_VENV_IN_PROJECT: true
:check-backend:
  :stage: check
  :extends: ".backend"
  :services:
  - mysql:8.0
  - redis:latest
  :script:
  - export CARBURE_HOME=$(pwd)
  - export DATABASE_URL=mysql://root:$MYSQL_ROOT_PASSWORD@mysql:3306/$MYSQL_DATABASE
  - export REDIS_URL=redis://redis:6379
  - pipenv run ruff check
  - pipenv run ruff format --check
  - TEST=1 pipenv run python web/manage.py test web
  :rules:
  - :if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_AUTO_MERGE_ENABLED
      == "true"
    :when: never
  - :changes:
    - web/**/*
    - ".gitlab-ci.yml"
:check-frontend:
  :stage: check
  :extends: ".frontend"
  :script:
  - npm run lint
  - npm run test
  - npm run build
  - |
    if [[ "$CI_COMMIT_BRANCH" != "dev" ]]; then
      npm run chromatic
    else
      echo "Skipping Chromatic on dev branch"
    fi
  :interruptible: true
  :rules:
  - :if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_AUTO_MERGE_ENABLED
      == "true"
    :when: never
  - :changes:
    - front/**/*
    - ".gitlab-ci.yml"
:pass:
  :stage: pass
  :script:
  - echo "Forcing pipeline to pass"
  :rules:
  - :when: always
:.backend:
  :image: python:3.12
  :cache:
  - :key:
      :files:
      - Pipfile.lock
    :paths:
    - ".cache/pip/"
    - ".venv/"
  :before_script:
  - pip install pipenv
  - pipenv install --dev --deploy --ignore-pipfile
  :rules:
  - :changes:
    - web/**/*
    - ".gitlab-ci.yml"
:.frontend:
  :image: node:latest
  :cache:
  - :key:
      :files:
      - front/package-lock.json
    :paths:
    - front/.npm/
  :before_script:
  - cd front
  - npm ci --cache .npm --prefer-offline
  :rules:
  - :changes:
    - front/**/*
    - ".gitlab-ci.yml"
stages:
- test
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

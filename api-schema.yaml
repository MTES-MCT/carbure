openapi: 3.0.3
info:
  title: Carbure API
  version: 1.0.0
  description: Carbure
paths:
  /api/auth/activate/:
    post:
      operationId: auth_activate_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivateResponse"
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: A successful activation
                  description: The account was successfully activated.
          description: ""
        "400":
          content:
            application/json:
              schema:
                message: Could not activate user account
              examples:
                BadRequest:
                  value:
                    message: Could not activate user account
                  summary: Activation failed
          description: Bad request - missing fields.
  /api/auth/confirm-email-change/:
    post:
      operationId: auth_confirm_email_change_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmEmailChangeRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ConfirmEmailChangeRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ConfirmEmailChangeRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmEmailChangeSuccess"
              examples:
                Succès:
                  value:
                    status: success
          description: Email mis à jour avec succès
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmEmailChangeError"
              examples:
                CodeIncorrect:
                  value:
                    error: INVALID_OTP
                  summary: Code incorrect
                CodeExpiré:
                  value:
                    error: OTP_CODE_EXPIRED
                  summary: Code expiré
                AucuneDemandeEnCours:
                  value:
                    error: NO_CHANGE_REQUEST
                  summary: Aucune demande en cours
          description: "Erreurs possibles: données invalides, aucune demande en cours,
            code expiré, code incorrect"
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: A successful activation
                  description: The account was successfully activated.
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: Invalid login or password | Account not activated
              examples:
                BadRequest:
                  value:
                    message: Invalid login or password | Account not activated
                  summary: login failed
          description: Bad request - missing fields.
  /api/auth/logout/:
    get:
      operationId: auth_logout_retrieve
      tags:
        - auth
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: Request successful.
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/request-activation-link/:
    post:
      operationId: auth_request_activation_link_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/request-email-change/:
    post:
      operationId: auth_request_email_change_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestEmailChangeRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestEmailChangeRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RequestEmailChangeRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestEmailChangeSuccess"
              examples:
                Succès:
                  value:
                    status: otp_sent
          description: Code OTP envoyé avec succès à la nouvelle adresse email
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestEmailChangeError"
              examples:
                ErreurDeValidation:
                  value:
                    message: INVALID_DATA
                    errors:
                      new_email:
                        - Cette adresse email est déjà utilisée par un autre
                          compte.
                      password:
                        - Mot de passe incorrect.
                  summary: Erreur de validation
          description: "Erreurs possibles: données invalides, mot de passe incorrect,
            email déjà utilisé"
  /api/auth/request-otp/:
    get:
      operationId: auth_request_otp_retrieve
      tags:
        - auth
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtpResponse"
              examples:
                ExampleResponse.:
                  value:
                    valid_until: 07/03/2024, 14:09
                  summary: Example response.
          description: ""
  /api/auth/request-password-change/:
    post:
      operationId: auth_request_password_change_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordSuccess"
              examples:
                Succès:
                  value:
                    status: success
          description: Mot de passe modifié avec succès
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordError"
              examples:
                MotDePasseActuelIncorrect:
                  value:
                    message: INVALID_DATA
                    errors:
                      current_password:
                        - WRONG_CURRENT_PASSWORD
                  summary: Mot de passe actuel incorrect
                NouveauMotDePasseInvalide:
                  value:
                    message: INVALID_DATA
                    errors:
                      new_password:
                        - Ce mot de passe est trop court. Il doit contenir au
                          minimum 8 caractères.
                  summary: Nouveau mot de passe invalide
                MotsDePasseIdentiques:
                  value:
                    message: INVALID_DATA
                    errors:
                      current_password:
                        - PASSWORDS_MATCH
                  summary: Mots de passe identiques
          description: "Erreurs possibles: données invalides, mot de passe actuel
            incorrect, nouveau mot de passe invalide"
  /api/auth/request-password-reset/:
    post:
      operationId: auth_request_password_reset_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/reset-password/:
    post:
      operationId: auth_reset_password_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/verify-otp/:
    post:
      operationId: auth_verify_otp_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/double-counting/agreements/:
    get:
      operationId: double_counting_agreements_list
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DoubleCountingApplicationPartial"
          description: ""
  /api/double-counting/agreements/{id}/:
    get:
      operationId: double_counting_agreements_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoubleCountingRegistrationDetails"
          description: ""
  /api/double-counting/agreements/agreement-admin/:
    get:
      operationId: double_counting_agreements_agreement_admin_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementLists"
          description: ""
  /api/double-counting/agreements/agreement-public/:
    get:
      operationId: double_counting_agreements_agreement_public_list
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DoubleCountingRegistrationPublic"
          description: ""
  /api/double-counting/agreements/export/:
    get:
      operationId: double_counting_agreements_export_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/double-counting/agreements/filters/:
    get:
      operationId: double_counting_agreements_filters_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                message: No filter was specified | NOT_FOUND
              examples:
                InvalidFilter:
                  value:
                    message: No filter was specified
                  summary: Invalid filter
                NotFound:
                  value:
                    message: NOT_FOUND
                  summary: Not found
          description: Bad request - invalid filter or not found.
  /api/double-counting/applications/{id}/:
    get:
      operationId: double_counting_applications_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoubleCountingApplication"
          description: ""
  /api/double-counting/applications/{id}/export/:
    get:
      operationId: double_counting_applications_export_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/force-download:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.*
                  summary: Example of export response.
          description: ""
  /api/double-counting/applications/{id}/files/{file_id}/:
    delete:
      operationId: double_counting_applications_files_destroy
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: file_id
          schema:
            type: integer
          description: File ID to delete
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
          description: ""
  /api/double-counting/applications/{id}/update-approved-quotas/:
    post:
      operationId: double_counting_applications_update_approved_quotas_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/{id}/upload-files/:
    post:
      operationId: double_counting_applications_upload_files_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationFileUploadRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ApplicationFileUploadRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ApplicationFileUploadRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
          description: ""
  /api/double-counting/applications/add/:
    post:
      operationId: double_counting_applications_add_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/approve/:
    post:
      operationId: double_counting_applications_approve_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveDoubleCountingRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ApproveDoubleCountingRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ApproveDoubleCountingRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/check-file/:
    post:
      operationId: double_counting_applications_check_file_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckFileResponse"
          description: ""
  /api/double-counting/applications/export-application/:
    get:
      operationId: double_counting_applications_export_application_retrieve
      parameters:
        - in: query
          name: dca_id
          schema:
            type: integer
          description: Doublecount application ID
          required: true
        - in: query
          name: di
          schema:
            type: string
          description: Dechet industriel
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: file.docx
                  summary: Example of export response.
          description: ""
  /api/double-counting/applications/filters/:
    get:
      operationId: double_counting_applications_filters_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -created_at
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - created_at
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                message: No filter was specified | NOT_FOUND
              examples:
                InvalidFilter:
                  value:
                    message: No filter was specified
                  summary: Invalid filter
                NotFound:
                  value:
                    message: NOT_FOUND
                  summary: Not found
          description: Bad request - invalid filter or not found.
  /api/double-counting/applications/list-admin/:
    get:
      operationId: double_counting_applications_list_admin_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -created_at
                - -producer
                - -production_site
                - -valid_until
                - certificate_id
                - created_at
                - producer
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
            * `producer` - Producer
            * `-producer` - Producer (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: producers
          schema:
            type: string
        - in: query
          name: production_sites
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationListe"
          description: ""
  /api/double-counting/applications/reject/:
    post:
      operationId: double_counting_applications_reject_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/snapshot/:
    get:
      operationId: double_counting_snapshot_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSnapshot"
          description: ""
  /api/elec/certificates/clients/:
    get:
      operationId: elec_certificates_clients_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity querying the endpoint
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `name`
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityPreview"
          description: ""
  /api/elec/certificates/snapshot/:
    get:
      operationId: elec_certificates_snapshot_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: year
          schema:
            type: integer
          description: Year
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  provision_certificates_available:
                    type: integer
                  provision_certificates_history:
                    type: integer
                  transfer_certificates_pending:
                    type: integer
                  transfer_certificates_accepted:
                    type: integer
                  transfer_certificates_rejected:
                    type: integer
                required:
                  - provision_certificates_available
                  - provision_certificates_history
                  - transfer_certificates_pending
                  - transfer_certificates_accepted
                  - transfer_certificates_rejected
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    provision_certificates_available: 5
                    transfer_certificates_pending: 10
                    ...: ...
                  summary: Example of filters response.
          description: ""
  /api/elec/certificates/years/:
    get:
      operationId: elec_certificates_years_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - 2020
                    - 2021
                    - 2022
                    - 2023
                    - 2024
                  summary: Example of filters response.
          description: ""
  /api/elec/provision-certificates/:
    get:
      operationId: elec_provision_certificates_list
      parameters:
        - in: query
          name: cpo
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: energy_amount
          schema:
            type: number
            format: float
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: operating_unit
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -cpo
                - -operating_unit
                - -quarter
                - -remaining_energy_amount
                - -source
                - cpo
                - operating_unit
                - quarter
                - remaining_energy_amount
                - source
          description: |-
            Ordre

            * `quarter` - Quarter
            * `-quarter` - Quarter (décroissant)
            * `remaining_energy_amount` - Remaining energy amount
            * `-remaining_energy_amount` - Remaining energy amount (décroissant)
            * `cpo` - Cpo
            * `-cpo` - Cpo (décroissant)
            * `operating_unit` - Operating unit
            * `-operating_unit` - Operating unit (décroissant)
            * `source` - Source
            * `-source` - Source (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: quarter
          schema:
            type: array
            items:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - MANUAL
                - METER_READINGS
                - null
                - QUALICHARGE
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedElecProvisionCertificateList"
          description: ""
  /api/elec/provision-certificates-qualicharge/:
    get:
      operationId: elec_provision_certificates_qualicharge_list
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
        - in: query
          name: not_validated
          schema:
            type: boolean
        - in: query
          name: operating_unit
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: station_id
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: validated_by
          schema:
            type: array
            items:
              type: string
              enum:
                - BOTH
                - CPO
                - DGEC
                - NO_ONE
          description: |-
            * `NO_ONE` - NO_ONE
            * `DGEC` - DGEC
            * `CPO` - CPO
            * `BOTH` - BOTH
          explode: true
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedElecProvisionCertificateQualichargeList"
          description: ""
  /api/elec/provision-certificates-qualicharge/bulk-create/:
    post:
      operationId: bulk_create_provision_certificates_qualicharge
      description: Create multiple provision certificates in bulk (from Qualicharge)
      tags:
        - elec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateBulkRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateBulkRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateBulkRequest"
        required: true
      security:
        - jwtAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
                errors: []
          description: Success message
  /api/elec/provision-certificates-qualicharge/bulk-update/:
    post:
      operationId: bulk_update_provision_certificates_qualicharge
      description: Update multiple provision certificates in bulk (from Qualicharge)
      tags:
        - elec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateUpdateBulkRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateUpdateBulkRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProvisionCertificateUpdateBulkRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
                errors: []
          description: Success message
  /api/elec/provision-certificates-qualicharge/filters/:
    get:
      operationId: filter_provision_certificates_qualicharge
      description: Retrieve content of a specific filter
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - date_from
              - entity_id
              - operating_unit
              - station_id
              - validated_by
              - year
          description: Filter string to apply
          required: true
        - in: query
          name: not_validated
          schema:
            type: boolean
        - in: query
          name: operating_unit
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: station_id
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: validated_by
          schema:
            type: array
            items:
              type: string
              enum:
                - BOTH
                - CPO
                - DGEC
                - NO_ONE
          description: |-
            * `NO_ONE` - NO_ONE
            * `DGEC` - DGEC
            * `CPO` - CPO
            * `BOTH` - BOTH
          explode: true
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - AMENAGEUR 1
                    - AMENAGEUR 2
                    - AMENAGEUR 3
                    - AMENAGEUR 4
                    - AMENAGEUR 5
                  summary: Example of filters response.
          description: ""
  /api/elec/provision-certificates/{id}/:
    get:
      operationId: elec_provision_certificates_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat de Fourniture
            (elec).
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecProvisionCertificate"
          description: ""
  /api/elec/provision-certificates/balance/:
    get:
      operationId: elec_provision_certificates_balance_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: integer
          description: ""
  /api/elec/provision-certificates/export/:
    get:
      operationId: export_provision_certificates_excel
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                format: binary
                description: Excel file download
          description: ""
  /api/elec/provision-certificates/filters/:
    get:
      operationId: elec_provision_certificates_filters_retrieve
      parameters:
        - in: query
          name: cpo
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: energy_amount
          schema:
            type: number
            format: float
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: operating_unit
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -cpo
                - -operating_unit
                - -quarter
                - -remaining_energy_amount
                - -source
                - cpo
                - operating_unit
                - quarter
                - remaining_energy_amount
                - source
          description: |-
            Ordre

            * `quarter` - Quarter
            * `-quarter` - Quarter (décroissant)
            * `remaining_energy_amount` - Remaining energy amount
            * `-remaining_energy_amount` - Remaining energy amount (décroissant)
            * `cpo` - Cpo
            * `-cpo` - Cpo (décroissant)
            * `operating_unit` - Operating unit
            * `-operating_unit` - Operating unit (décroissant)
            * `source` - Source
            * `-source` - Source (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: quarter
          schema:
            type: array
            items:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - MANUAL
                - METER_READINGS
                - null
                - QUALICHARGE
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - ETBE
                    - Ethanol
                    - EMHV
                    - B100
                    - HVOE
                  summary: Example of filters response.
          description: ""
  /api/elec/provision-certificates/import/:
    post:
      operationId: elec_provision_certificates_import_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file to import
              required:
                - file
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties: {}
          description: ""
  /api/elec/provision-certificates/transfer/:
    post:
      operationId: elec_provision_certificates_transfer_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElecTransferRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ElecTransferRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ElecTransferRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecTransferCertificate"
          description: ""
  /api/elec/transfer-certificates/:
    get:
      operationId: elec_transfer_certificates_list
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: client
          schema:
            type: integer
        - in: query
          name: consumption_date
          schema:
            type: string
            format: date
        - in: query
          name: cpo
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: energy_amount
          schema:
            type: number
            format: float
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: month
          schema:
            type: number
        - in: query
          name: operator
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -consumption_date
                - -cpo
                - -energy_amount
                - -operator
                - -status
                - -transfer_date
                - certificate_id
                - consumption_date
                - cpo
                - energy_amount
                - operator
                - status
                - transfer_date
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `energy_amount` - Energy amount
            * `-energy_amount` - Energy amount (décroissant)
            * `cpo` - Cpo
            * `-cpo` - Cpo (décroissant)
            * `operator` - Operator
            * `-operator` - Operator (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
            * `transfer_date` - Transfer date
            * `-transfer_date` - Transfer date (décroissant)
            * `consumption_date` - Consumption date
            * `-consumption_date` - Consumption date (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: supplier
          schema:
            type: integer
        - in: query
          name: transfer_date
          schema:
            type: string
            format: date
        - in: query
          name: used_in_tiruert
          schema:
            type: boolean
        - in: query
          name: year
          schema:
            type: number
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedElecTransferCertificateList"
          description: ""
  /api/elec/transfer-certificates/{id}/:
    get:
      operationId: elec_transfer_certificates_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat de Cession (elec).
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecTransferCertificate"
          description: ""
  /api/elec/transfer-certificates/{id}/accept/:
    post:
      operationId: elec_transfer_certificates_accept_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat de Cession (elec).
          required: true
      tags:
        - elec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElecTransferAcceptRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ElecTransferAcceptRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ElecTransferAcceptRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          description: No response body
  /api/elec/transfer-certificates/{id}/cancel/:
    post:
      operationId: elec_transfer_certificates_cancel_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat de Cession (elec).
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          description: No response body
  /api/elec/transfer-certificates/{id}/reject/:
    post:
      operationId: elec_transfer_certificates_reject_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat de Cession (elec).
          required: true
      tags:
        - elec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElecTransferRejectRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ElecTransferRejectRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ElecTransferRejectRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          description: No response body
  /api/elec/transfer-certificates/export/:
    get:
      operationId: export_transfer_certificates_excel
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                format: binary
                description: Excel file download
          description: ""
  /api/elec/transfer-certificates/filters/:
    get:
      operationId: elec_transfer_certificates_filters_retrieve
      parameters:
        - in: query
          name: certificate_id
          schema:
            type: string
        - in: query
          name: client
          schema:
            type: integer
        - in: query
          name: consumption_date
          schema:
            type: string
            format: date
        - in: query
          name: cpo
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: energy_amount
          schema:
            type: number
            format: float
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: month
          schema:
            type: number
        - in: query
          name: operator
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -certificate_id
                - -consumption_date
                - -cpo
                - -energy_amount
                - -operator
                - -status
                - -transfer_date
                - certificate_id
                - consumption_date
                - cpo
                - energy_amount
                - operator
                - status
                - transfer_date
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `energy_amount` - Energy amount
            * `-energy_amount` - Energy amount (décroissant)
            * `cpo` - Cpo
            * `-cpo` - Cpo (décroissant)
            * `operator` - Operator
            * `-operator` - Operator (décroissant)
            * `certificate_id` - Certificate id
            * `-certificate_id` - Certificate id (décroissant)
            * `transfer_date` - Transfer date
            * `-transfer_date` - Transfer date (décroissant)
            * `consumption_date` - Consumption date
            * `-consumption_date` - Consumption date (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: supplier
          schema:
            type: integer
        - in: query
          name: transfer_date
          schema:
            type: string
            format: date
        - in: query
          name: used_in_tiruert
          schema:
            type: boolean
        - in: query
          name: year
          schema:
            type: number
      tags:
        - elec
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - ETBE
                    - Ethanol
                    - EMHV
                    - B100
                    - HVOE
                  summary: Example of filters response.
          description: ""
  /api/entities/:
    get:
      operationId: entities_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: has_requests
          schema:
            type: boolean
          description: Has requests
        - in: query
          name: q
          schema:
            type: string
          description: Search query
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityMetrics"
          description: ""
    post:
      operationId: entities_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEntityRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateEntityRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateEntityRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/{id}/:
    get:
      operationId: entities_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: The id of the admin entity enabling the company
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Entity.
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserEntity"
          description: ""
  /api/entities/{id}/enable/:
    post:
      operationId: entities_enable_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: The id of the admin entity enabling the company
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Entity.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: ""
  /api/entities/add-company:
    post:
      operationId: entities_add_company_create
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityCompanyRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EntityCompanyRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EntityCompanyRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/:
    get:
      operationId: entities_certificates_list
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Compay ID, Admin only
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: production_site_id
          schema:
            type: integer
          description: Production site ID
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `certificate_id`
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityCertificate"
          description: ""
  /api/entities/certificates/{id}/:
    get:
      operationId: entities_certificates_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this CarbureEntityCertificates.
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityCertificate"
          description: ""
  /api/entities/certificates/add/:
    post:
      operationId: entities_certificates_add_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AddCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/check-entity/:
    post:
      operationId: entities_certificates_check_entity_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CheckCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CheckCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/delete/:
    post:
      operationId: entities_certificates_delete_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DeleteCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DeleteCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/reject-entity/:
    post:
      operationId: entities_certificates_reject_entity_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RejectCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RejectCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/set-default/:
    post:
      operationId: entities_certificates_set_default_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetDefaultCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SetDefaultCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SetDefaultCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/certificates/update-certificate/:
    post:
      operationId: entities_certificates_update_certificate_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/depots/:
    get:
      operationId: entities_depots_list
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Compay ID, Admin only
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitySite"
          description: ""
  /api/entities/depots/add/:
    post:
      operationId: entities_depots_add_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDepotRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddDepotRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AddDepotRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/depots/create-depot/:
    post:
      operationId: entities_depots_create_depot_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDepotRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateDepotRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateDepotRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/depots/delete-depot/:
    post:
      operationId: entities_depots_delete_depot_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDepotRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DeleteDepotRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DeleteDepotRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/direct-deliveries/:
    post:
      operationId: entities_direct_deliveries_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectDeliveriesRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DirectDeliveriesRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DirectDeliveriesRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/elec/:
    post:
      operationId: entities_elec_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleElecRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ToggleElecRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ToggleElecRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/notifications/:
    get:
      operationId: entities_notifications_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CarbureNotification"
          description: ""
  /api/entities/notifications/ack/:
    post:
      operationId: entities_notifications_ack_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
                updated_count: 0
              examples:
                SuccessExample:
                  value:
                    status: success
                    updated_count: 0
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/production-sites/:
    get:
      operationId: entities_production_sites_list
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Compay ID, Admin only
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityProductionSite"
          description: ""
    post:
      operationId: entities_production_sites_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductionSiteModelRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProductionSiteModelRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProductionSiteModelRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepotProductionSite"
          description: ""
  /api/entities/production-sites/{id}/delete/:
    post:
      operationId: entities_production_sites_delete_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Site de Production.
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/production-sites/{id}/set-biofuels/:
    post:
      operationId: entities_production_sites_set_biofuels_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Site de Production.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetBioFuelsRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SetBioFuelsRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SetBioFuelsRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/production-sites/{id}/set-certificates/:
    post:
      operationId: entities_production_sites_set_certificates_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Site de Production.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetCertificateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SetCertificateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SetCertificateRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/production-sites/{id}/set-feedstocks/:
    post:
      operationId: entities_production_sites_set_feedstocks_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Site de Production.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetFeedstocksRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SetFeedstocksRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SetFeedstocksRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/production-sites/{id}/update/:
    post:
      operationId: entities_production_sites_update_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Site de Production.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductionSiteModelRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateProductionSiteModelRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProductionSiteModelRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/release-for-consumption/:
    post:
      operationId: entities_release_for_consumption_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleRFCRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ToggleRFCRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ToggleRFCRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/search-company/:
    post:
      operationId: entities_search_company_create
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SeachCompanyRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SeachCompanyRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SeachCompanyRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseData"
          description: ""
  /api/entities/stats/:
    get:
      operationId: entities_stats_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
              examples:
                SuccessExample:
                  value:
                    metabase_iframe_url: https://metabase.carbure.beta.gouv.fr/embed/dashboard/...#bordered=false&titled=false
                  summary: Success example
          description: ""
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/stocks/:
    post:
      operationId: entities_stocks_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleStocksRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ToggleStocksRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ToggleStocksRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/trading/:
    post:
      operationId: entities_trading_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleTradingRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ToggleTradingRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ToggleTradingRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/unit/:
    post:
      operationId: entities_unit_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UnitRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UnitRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/update-entity-info/:
    post:
      operationId: entities_update_entity_info_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEntityInfoRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateEntityInfoRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateEntityInfoRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/:
    get:
      operationId: entities_users_list
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Compay ID, Admin only
          required: true
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
          description: Search in user email or entity name.
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityUser"
          description: ""
  /api/entities/users/accept-user/:
    post:
      operationId: entities_users_accept_user_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrantAccessRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/GrantAccessRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/GrantAccessRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/change-role/:
    post:
      operationId: entities_users_change_role_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/entity-rights-requests/:
    get:
      operationId: entities_users_entity_rights_requests_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRightsResponse"
          description: ""
  /api/entities/users/invite-user/:
    post:
      operationId: entities_users_invite_user_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InviteUserRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InviteUserRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/revoke-access/:
    post:
      operationId: entities_users_revoke_access_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeUserRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RevokeUserRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RevokeUserRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/rights-requests/:
    get:
      operationId: entities_users_rights_requests_list
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Filter by entity ID.
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
          description: Search in user email or entity name.
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: statuses
          schema:
            type: array
            items:
              type: string
          description: Comma-separated list of statuses (e.g., active,pending).
      tags:
        - entities
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRightsRequests"
          description: ""
  /api/entities/users/update-right-request/:
    post:
      operationId: entities_users_update_right_request_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRightsRequestsRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateRightsRequestsRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateRightsRequestsRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/entities/users/update-user-role/:
    post:
      operationId: entities_users_update_user_role_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRoleRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateUserRoleRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateUserRoleRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: Success example
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: ""
              examples:
                BadRequest:
                  value:
                    message: ""
                  summary: Bad request
          description: Bad request.
  /api/nav-stats:
    get:
      operationId: nav_stats_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - nav-stats
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NavStats"
          description: ""
  /api/resources/airports:
    get:
      operationId: resources_airports_list
      parameters:
        - in: query
          name: public_only
          schema:
            type: boolean
          description: Public Only
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `icao_code` and `city`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Airport"
          description: ""
  /api/resources/biofuels:
    get:
      operationId: resources_biofuels_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en`, and `code`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Biofuel"
          description: ""
  /api/resources/certificates:
    get:
      operationId: resources_certificates_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `certificate_id` and `certificate_holder`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GenericCertificate"
          description: ""
  /api/resources/countries:
    get:
      operationId: resources_countries_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code_pays`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
          description: ""
  /api/resources/depots:
    get:
      operationId: resources_depots_list
      parameters:
        - in: query
          name: public_only
          schema:
            type: boolean
          description: Public Only
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code_pays`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Depot"
          description: ""
  /api/resources/entities:
    get:
      operationId: resources_entities_list
      parameters:
        - in: query
          name: allowed_tiruert
          schema:
            type: boolean
          description: Only show entities allowed to be tiruert
        - in: query
          name: entity_type
          schema:
            type: array
            items:
              type: string
          description: Only keep specific entity types
        - in: query
          name: is_enabled
          schema:
            type: boolean
          description: Only show enabled entities
        - in: query
          name: is_tiruert_liable
          schema:
            type: boolean
          description: Only show liable entities
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `name`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityPreview"
          description: ""
  /api/resources/feedstocks:
    get:
      operationId: resources_feedstocks_list
      parameters:
        - in: query
          name: double_count_only
          schema:
            type: boolean
          description: Double compte only
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedStock"
          description: ""
  /api/resources/production-sites:
    get:
      operationId: resources_production_sites_list
      parameters:
        - in: query
          name: producer_id
          schema:
            type: integer
          description: Search within the field `producer_id`
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `name`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductionSite"
          description: ""
  /api/saf/clients/:
    get:
      operationId: saf_clients_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEntityPreviewList"
          description: ""
  /api/saf/clients/{id}/:
    get:
      operationId: saf_clients_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Entity.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityPreview"
          description: ""
  /api/saf/snapshot/:
    get:
      operationId: saf_snapshot_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: year
          schema:
            type: integer
          description: Year
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket_sources_available:
                    type: integer
                  ticket_sources_history:
                    type: integer
                  tickets_assigned:
                    type: integer
                  tickets_assigned_pending:
                    type: integer
                  tickets_assigned_accepted:
                    type: integer
                  tickets_assigned_rejected:
                    type: integer
                  tickets_received:
                    type: integer
                  tickets_received_pending:
                    type: integer
                  tickets_received_accepted:
                    type: integer
                required:
                  - ticket_sources_available
                  - ticket_sources_history
                  - tickets_assigned
                  - tickets_assigned_pending
                  - tickets_assigned_accepted
                  - tickets_assigned_rejected
                  - tickets_received
                  - tickets_received_pending
                  - tickets_received_accepted
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    tickets_pending: 5
                    tickets_accepted: 10
                    ...: ...
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/ticket-sources/:
    get:
      operationId: saf_ticket_sources_list
      parameters:
        - in: query
          name: added_by
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: delivery_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -added_by
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - added_by
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `added_by` - Added by
            * `-added_by` - Added by (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: List of suppliers provided via
            ?suppliers=supplier1&suppliers=supplier2&suppliers=supplier3
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSafTicketSourcePreviewList"
          description: ""
  /api/saf/ticket-sources/{id}/:
    get:
      operationId: saf_ticket_sources_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Tickets source SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicketSource"
          description: ""
  /api/saf/ticket-sources/{id}/assign/:
    post:
      operationId: saf_ticket_sources_assign_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Tickets source SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicketSourceAssignment"
              examples:
                ExampleOfAssignResponse.:
                  value: {}
                  summary: Example of assign response.
          description: ""
  /api/saf/ticket-sources/export/:
    get:
      operationId: saf_ticket_sources_export_retrieve
      parameters:
        - in: query
          name: added_by
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: delivery_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -added_by
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - added_by
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `added_by` - Added by
            * `-added_by` - Added by (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: List of suppliers provided via
            ?suppliers=supplier1&suppliers=supplier2&suppliers=supplier3
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/saf/ticket-sources/filters/:
    get:
      operationId: saf_ticket_sources_filters_retrieve
      parameters:
        - in: query
          name: added_by
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: delivery_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -added_by
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - added_by
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `added_by` - Added by
            * `-added_by` - Added by (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: List of suppliers provided via
            ?suppliers=supplier1&suppliers=supplier2&suppliers=supplier3
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/saf/ticket-sources/group-assign/:
    post:
      operationId: saf_ticket_sources_group_assign_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAssignmentResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/:
    get:
      operationId: saf_tickets_list
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: consumption_type
          schema:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - MAC
                - MAC_DECLASSEMENT
          description: |-
            * `MAC` - MAC
            * `MAC_DECLASSEMENT` - MAC_DECLASSEMENT
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -consumption_type
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -reception_airport
                - -supplier
                - -volume
                - client
                - consumption_type
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - reception_airport
                - supplier
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `supplier` - Supplier
            * `-supplier` - Supplier (décroissant)
            * `consumption_type` - Consumption type
            * `-consumption_type` - Consumption type (décroissant)
            * `reception_airport` - Reception airport
            * `-reception_airport` - Reception airport (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: reception_airport
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSafTicketPreviewList"
          description: ""
  /api/saf/tickets/{id}/:
    get:
      operationId: saf_tickets_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicket"
          description: ""
  /api/saf/tickets/{id}/accept/:
    post:
      operationId: saf_tickets_accept_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AcceptRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AcceptRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/{id}/cancel/:
    post:
      operationId: saf_tickets_cancel_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/{id}/credit-source/:
    post:
      operationId: saf_tickets_credit_source_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicket"
              examples:
                ExampleOfCreditResponse.:
                  value:
                    status: success
                  summary: Example of credit response.
          description: ""
  /api/saf/tickets/{id}/reject/:
    post:
      operationId: saf_tickets_reject_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/export/:
    get:
      operationId: saf_tickets_export_retrieve
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: consumption_type
          schema:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - MAC
                - MAC_DECLASSEMENT
          description: |-
            * `MAC` - MAC
            * `MAC_DECLASSEMENT` - MAC_DECLASSEMENT
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -consumption_type
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -reception_airport
                - -supplier
                - -volume
                - client
                - consumption_type
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - reception_airport
                - supplier
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `supplier` - Supplier
            * `-supplier` - Supplier (décroissant)
            * `consumption_type` - Consumption type
            * `-consumption_type` - Consumption type (décroissant)
            * `reception_airport` - Reception airport
            * `-reception_airport` - Reception airport (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: reception_airport
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/saf/tickets/filters/:
    get:
      operationId: saf_tickets_filters_retrieve
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: client
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: consumption_type
          schema:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - MAC
                - MAC_DECLASSEMENT
          description: |-
            * `MAC` - MAC
            * `MAC_DECLASSEMENT` - MAC_DECLASSEMENT
          explode: true
          style: form
        - in: query
          name: country_of_origin
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: feedstock
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -consumption_type
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -reception_airport
                - -supplier
                - -volume
                - client
                - consumption_type
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - reception_airport
                - supplier
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `supplier` - Supplier
            * `-supplier` - Supplier (décroissant)
            * `consumption_type` - Consumption type
            * `-consumption_type` - Consumption type (décroissant)
            * `reception_airport` - Reception airport
            * `-reception_airport` - Reception airport (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: period
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          explode: true
          style: form
        - in: query
          name: production_site
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: reception_airport
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: supplier
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/saf/years/:
    get:
      operationId: saf_years_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - "2020"
                    - "2021"
                    - "2022"
                    - "2023"
                    - "2024"
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/tiruert/admin-objectives/:
    get:
      operationId: admin_objectives
      description: Get agregated objectives for all entities - admin view
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
          description: Date from which to calculate balance for teneur
          required: true
        - in: query
          name: date_to
          schema:
            type: string
            format: date
          description: Date to which to calculate balance for teneur
          required: true
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: year
          schema:
            type: string
          description: Year of the objectives
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectiveOutput"
          description: All agregated objectives for all liable enttities.
  /api/tiruert/admin-objectives-entity/:
    get:
      operationId: admin_objectives_entity
      description: Get objectives for a specific entity - admin view
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
          description: Date from which to calculate balance for teneur
          required: true
        - in: query
          name: date_to
          schema:
            type: string
            format: date
          description: Date to which to calculate balance for teneur
          required: true
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: selected_entity_id
          schema:
            type: integer
          description: Entity's objectives.
          required: true
        - in: query
          name: year
          schema:
            type: string
          description: Year of the objectives
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectiveOutput"
          description: All objectives.
  /api/tiruert/elec-operations/:
    get:
      operationId: list_elec_operations
      description: Retrieve a list of operations with optional filtering and pagination.
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: details
          schema:
            type: boolean
            default: "0"
          description: Include detailed information if set to `1`.
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              enum:
                - ACQUISITION_FROM_CPO
                - CESSION
                - TENEUR
                - ACQUISITION
              type: string
              description: |-
                * `ACQUISITION_FROM_CPO` - ACQUISITION_FROM_CPO
                * `CESSION` - CESSION
                * `TENEUR` - TENEUR
                * `ACQUISITION` - ACQUISITION
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -created_at
                - -from_to
                - -operation
                - -period
                - -quantity
                - -status
                - created_at
                - from_to
                - operation
                - period
                - quantity
                - status
          description: |-
            Ordre

            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `operation` - Operation
            * `-operation` - Operation (décroissant)
            * `status` - Status
            * `-status` - Status (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
          explode: false
          style: form
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: status
          schema:
            type: array
            items:
              enum:
                - PENDING
                - ACCEPTED
                - REJECTED
                - CANCELED
                - DECLARED
              type: string
              description: |-
                * `PENDING` - PENDING
                * `ACCEPTED` - ACCEPTED
                * `REJECTED` - REJECTED
                * `CANCELED` - CANCELED
                * `DECLARED` - DECLARED
        - in: query
          name: type
          schema:
            type: array
            items:
              enum:
                - CREDIT
                - DEBIT
              type: string
              description: |-
                * `CREDIT` - CREDIT
                * `DEBIT` - DEBIT
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedElecOperationListList"
          description: A list of operations.
    post:
      operationId: create_elec_operation
      description: Create a new operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElecOperationInputRequest"
            examples:
              CreateOperationExample:
                value:
                  type: TENEUR
                  credited_entity: ""
                  debited_entity: 2
                summary: Create Operation Example
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ElecOperationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ElecOperationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecOperationList"
              examples:
                CreateOperationExample:
                  value:
                    type: TENEUR
                    credited_entity: ""
                    debited_entity: 2
                  summary: Create Operation Example
          description: The newly created operation.
        "400":
          description: Invalid input data.
  /api/tiruert/elec-operations/{id}/:
    get:
      operationId: get_elec_operation
      description: Retrieve one specific operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération électricité.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecOperation"
          description: Details of specific operation.
    patch:
      operationId: update_elec_operation
      description: Update a part of operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération électricité.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedElecOperationUpdateRequest"
            examples:
              UpdateOperationExample:
                value:
                  quantity: 10
                summary: Update Operation Example
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedElecOperationUpdateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedElecOperationUpdateRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElecOperation"
              examples:
                UpdateOperationExample:
                  value:
                    quantity: 10
                  summary: Update Operation Example
          description: The updated operation.
        "400":
          description: Invalid input data.
    delete:
      operationId: delete_elec_operation
      description: Delete an operation. Only allowed for certain types and statuses.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération électricité.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "204":
          description: Operation deleted successfully.
        "403":
          description: Forbidden. The operation type or status does not allow deletion.
  /api/tiruert/elec-operations/{id}/accept/:
    post:
      operationId: accept_elec_operation
      description: Set status operation to ACCEPTED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération électricité.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: accepted
          description: Success message
        "400":
          content:
            application/json:
              schema:
                error: OPERATION_TYPE_NOT_ALLOWED
          description: Error message
        "404":
          content:
            application/json:
              schema:
                error: OPERATION_NOT_FOUND
          description: Error message
  /api/tiruert/elec-operations/{id}/reject/:
    post:
      operationId: reject_elec_operation
      description: Set status operation to REJECTED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération électricité.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: rejected
          description: Success message
        "404":
          content:
            application/json:
              schema:
                error: OPERATION_NOT_FOUND
          description: Error message
  /api/tiruert/elec-operations/balance/:
    get:
      operationId: list_elec_balance
      description: Retrieve electricity balance
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
          description: Date from when to calculate teneur and quantity
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              enum:
                - ACQUISITION_FROM_CPO
                - CESSION
                - TENEUR
                - ACQUISITION
              type: string
              description: |-
                * `ACQUISITION_FROM_CPO` - ACQUISITION_FROM_CPO
                * `CESSION` - CESSION
                * `TENEUR` - TENEUR
                * `ACQUISITION` - ACQUISITION
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -created_at
                - -from_to
                - -operation
                - -period
                - -quantity
                - -status
                - created_at
                - from_to
                - operation
                - period
                - quantity
                - status
          description: |-
            Ordre

            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `operation` - Operation
            * `-operation` - Operation (décroissant)
            * `status` - Status
            * `-status` - Status (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
          explode: false
          style: form
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: status
          schema:
            type: array
            items:
              enum:
                - PENDING
                - ACCEPTED
                - REJECTED
                - CANCELED
                - DECLARED
              type: string
              description: |-
                * `PENDING` - PENDING
                * `ACCEPTED` - ACCEPTED
                * `REJECTED` - REJECTED
                * `CANCELED` - CANCELED
                * `DECLARED` - DECLARED
        - in: query
          name: type
          schema:
            type: array
            items:
              enum:
                - CREDIT
                - DEBIT
              type: string
              description: |-
                * `CREDIT` - CREDIT
                * `DEBIT` - DEBIT
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedElecBalanceList"
          description: ""
  /api/tiruert/elec-operations/filters/:
    get:
      operationId: filter_elec_operations
      description: Retrieve content of a specific filter
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - from_to
              - operation
              - period
              - status
              - type
          description: Filter string to apply
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              enum:
                - ACQUISITION_FROM_CPO
                - CESSION
                - TENEUR
                - ACQUISITION
              type: string
              description: |-
                * `ACQUISITION_FROM_CPO` - ACQUISITION_FROM_CPO
                * `CESSION` - CESSION
                * `TENEUR` - TENEUR
                * `ACQUISITION` - ACQUISITION
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -created_at
                - -from_to
                - -operation
                - -period
                - -quantity
                - -status
                - created_at
                - from_to
                - operation
                - period
                - quantity
                - status
          description: |-
            Ordre

            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `operation` - Operation
            * `-operation` - Operation (décroissant)
            * `status` - Status
            * `-status` - Status (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
          explode: false
          style: form
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: status
          schema:
            type: array
            items:
              enum:
                - PENDING
                - ACCEPTED
                - REJECTED
                - CANCELED
                - DECLARED
              type: string
              description: |-
                * `PENDING` - PENDING
                * `ACCEPTED` - ACCEPTED
                * `REJECTED` - REJECTED
                * `CANCELED` - CANCELED
                * `DECLARED` - DECLARED
        - in: query
          name: type
          schema:
            type: array
            items:
              enum:
                - CREDIT
                - DEBIT
              type: string
              description: |-
                * `CREDIT` - CREDIT
                * `DEBIT` - DEBIT
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/tiruert/elec-operations/teneur/declare/:
    post:
      operationId: declare_elec_teneur
      description: Set teneur operations to DECLARED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: validated
          description: Success message
        "404":
          content:
            application/json:
              schema:
                error: NOTHING_TO_DECLARE
          description: Error message
  /api/tiruert/mac-fossil-fuel/export/:
    get:
      operationId: tiruert_mac_fossil_fuel_export_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: mac_export.xlsx
                  summary: Example of export response.
          description: ""
  /api/tiruert/objectives/:
    get:
      operationId: objectives
      description: Get all objectives
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date
          description: Date from which to calculate balance for teneur
          required: true
        - in: query
          name: date_to
          schema:
            type: string
            format: date
          description: Date to which to calculate balance for teneur
          required: true
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: year
          schema:
            type: string
          description: Year of the objectives
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectiveOutput"
          description: All objectives.
  /api/tiruert/operations/:
    get:
      operationId: list_operations
      description: Retrieve a list of operations with optional filtering and pagination.
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: |-
            * `CONV` - Conventionnel
            * `ANN-IX-A` - ANNEXE IX-A
            * `ANN-IX-B` - ANNEXE IX-B
            * `TALLOL` - Tallol
            * `OTHER` - Autre
            * `EP2AM` - EP2AM
          explode: true
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: depot
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: details
          schema:
            type: boolean
            default: "0"
          description: Include detailed information if set to `1`.
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              type: string
              enum:
                - ACQUISITION
                - CESSION
                - CUSTOMS_CORRECTION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
                - TRANSFERT
          description: |-
            * `INCORPORATION` - INCORPORATION
            * `CESSION` - CESSION
            * `TENEUR` - TENEUR
            * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
            * `MAC_BIO` - MAC_BIO
            * `EXPORTATION` - EXPORTATION
            * `DEVALUATION` - DEVALUATION
            * `CUSTOMS_CORRECTION` - CUSTOMS_CORRECTION
            * `TRANSFERT` - TRANSFERT
            * `ACQUISITION` - ACQUISITION
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -available_balance
                - -biofuel
                - -created_at
                - -customs_category
                - -depot
                - -from_to
                - -pending_operations
                - -quantity
                - -saved_emissions
                - -sector
                - -status
                - -type
                - available_balance
                - biofuel
                - created_at
                - customs_category
                - depot
                - from_to
                - pending_operations
                - quantity
                - saved_emissions
                - sector
                - status
                - type
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `sector` - Sector
            * `-sector` - Sector (décroissant)
            * `biofuel` - Biofuel
            * `-biofuel` - Biofuel (décroissant)
            * `customs_category` - Customs category
            * `-customs_category` - Customs category (décroissant)
            * `type` - Type
            * `-type` - Type (décroissant)
            * `depot` - Depot
            * `-depot` - Depot (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `available_balance` - available_balance
            * `-available_balance` - available_balance (descending)
            * `pending_operations` - pending_operations
            * `-pending_operations` - pending_operations (descending)
            * `saved_emissions` - saved_emissions
            * `-saved_emissions` - saved_emissions (descending)
          explode: false
          style: form
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: sector
          schema:
            type: array
            items:
              type: string
              enum:
                - CARBURÉACTEUR
                - ESSENCE
                - GAZOLE
          description: |-
            * `ESSENCE` - ESSENCE
            * `GAZOLE` - GAZOLE
            * `CARBURÉACTEUR` - CARBURÉACTEUR
          explode: true
          style: form
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - CORRECTED
                - DECLARED
                - DRAFT
                - PENDING
                - REJECTED
                - VALIDATED
          description: |-
            * `PENDING` - PENDING
            * `ACCEPTED` - ACCEPTED
            * `REJECTED` - REJECTED
            * `CANCELED` - CANCELED
            * `DECLARED` - DECLARED
            * `CORRECTED` - CORRECTED
            * `VALIDATED` - VALIDATED
            * `DRAFT` - DRAFT
          explode: true
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CREDIT
                - DEBIT
          description: |-
            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          explode: true
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOperationListList"
          description: A list of operations.
    post:
      operationId: create_operation
      description: Create a new operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
            examples:
              CreateOperationExample:
                value:
                  type: TENEUR
                  customs_category: CONV
                  biofuel: 33
                  credited_entity: ""
                  debited_entity: 2
                  depot: ""
                  lots:
                    - id: 10
                      volume: 39462
                      emission_rate_per_mj: 5.25
                    - id: 11
                      volume: 723.2
                      emission_rate_per_mj: 30.2
                summary: Create Operation Example
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationList"
              examples:
                CreateOperationExample:
                  value:
                    type: TENEUR
                    customs_category: CONV
                    biofuel: 33
                    credited_entity: ""
                    debited_entity: 2
                    depot: ""
                    lots:
                      - id: 10
                        volume: 39462
                        emission_rate_per_mj: 5.25
                      - id: 11
                        volume: 723.2
                        emission_rate_per_mj: 30.2
                  summary: Create Operation Example
          description: The newly created operation.
        "400":
          description: Invalid input data.
  /api/tiruert/operations/{id}/:
    get:
      operationId: get_operation
      description: Retrieve one specific operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Details of specific operation.
    patch:
      operationId: update_operation
      description: Update a part of operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedOperationUpdateRequest"
            examples:
              UpdateOperationExample:
                value:
                  to_depot: 10
                summary: Update Operation Example
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedOperationUpdateRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedOperationUpdateRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
              examples:
                UpdateOperationExample:
                  value:
                    to_depot: 10
                  summary: Update Operation Example
          description: The updated operation.
        "400":
          description: Invalid input data.
    delete:
      operationId: delete_operation
      description: Delete an operation. Only allowed for certain types and statuses.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "204":
          description: Operation deleted successfully.
        "403":
          description: Forbidden. The operation type or status does not allow deletion.
  /api/tiruert/operations/{id}/accept/:
    post:
      operationId: accept_operation
      description: Set status operation to ACCEPTED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: accepted
          description: Success message
        "400":
          content:
            application/json:
              schema:
                error: OPERATION_TYPE_NOT_ALLOWED
          description: Error message
        "404":
          content:
            application/json:
              schema:
                error: OPERATION_NOT_FOUND
          description: Error message
  /api/tiruert/operations/{id}/correct/:
    post:
      operationId: correct_operation
      description: Create a new operation 'CUSTOMS_CORRECTION' with a volume to add or
        remove
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationCorrectionRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationCorrectionRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationCorrectionRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: corected
          description: Success message
        "404":
          content:
            application/json:
              schema:
                error: NOT_ENOUGH_VOLUME
          description: Error message
  /api/tiruert/operations/{id}/reject/:
    post:
      operationId: reject_operation
      description: Set status operation to REJECTED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: rejected
          description: Success message
        "404":
          content:
            application/json:
              schema:
                error: OPERATION_NOT_FOUND
          description: Error message
  /api/tiruert/operations/balance/:
    get:
      operationId: list_balances
      description: Retrieve balances grouped by mp category / biofuel or by sector or
        by depot
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: |-
            * `CONV` - Conventionnel
            * `ANN-IX-A` - ANNEXE IX-A
            * `ANN-IX-B` - ANNEXE IX-B
            * `TALLOL` - Tallol
            * `OTHER` - Autre
            * `EP2AM` - EP2AM
          explode: true
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
          description: Date from where to calculate teneur and quantity
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: depot
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: ges_bound_max
          schema:
            type: number
        - in: query
          name: ges_bound_min
          schema:
            type: number
        - in: query
          name: group_by
          schema:
            type: string
            enum:
              - depot
              - lot
              - sector
            default: ""
          description: Group by sector, lot or depot.
        - in: query
          name: operation
          schema:
            type: array
            items:
              type: string
              enum:
                - ACQUISITION
                - CESSION
                - CUSTOMS_CORRECTION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
                - TRANSFERT
          description: |-
            * `INCORPORATION` - INCORPORATION
            * `CESSION` - CESSION
            * `TENEUR` - TENEUR
            * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
            * `MAC_BIO` - MAC_BIO
            * `EXPORTATION` - EXPORTATION
            * `DEVALUATION` - DEVALUATION
            * `CUSTOMS_CORRECTION` - CUSTOMS_CORRECTION
            * `TRANSFERT` - TRANSFERT
            * `ACQUISITION` - ACQUISITION
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -available_balance
                - -biofuel
                - -created_at
                - -customs_category
                - -depot
                - -from_to
                - -pending_operations
                - -quantity
                - -saved_emissions
                - -sector
                - -status
                - -type
                - available_balance
                - biofuel
                - created_at
                - customs_category
                - depot
                - from_to
                - pending_operations
                - quantity
                - saved_emissions
                - sector
                - status
                - type
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `sector` - Sector
            * `-sector` - Sector (décroissant)
            * `biofuel` - Biofuel
            * `-biofuel` - Biofuel (décroissant)
            * `customs_category` - Customs category
            * `-customs_category` - Customs category (décroissant)
            * `type` - Type
            * `-type` - Type (décroissant)
            * `depot` - Depot
            * `-depot` - Depot (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `available_balance` - available_balance
            * `-available_balance` - available_balance (descending)
            * `pending_operations` - pending_operations
            * `-pending_operations` - pending_operations (descending)
            * `saved_emissions` - saved_emissions
            * `-saved_emissions` - saved_emissions (descending)
          explode: false
          style: form
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: sector
          schema:
            type: array
            items:
              type: string
              enum:
                - CARBURÉACTEUR
                - ESSENCE
                - GAZOLE
          description: |-
            * `ESSENCE` - ESSENCE
            * `GAZOLE` - GAZOLE
            * `CARBURÉACTEUR` - CARBURÉACTEUR
          explode: true
          style: form
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - CORRECTED
                - DECLARED
                - DRAFT
                - PENDING
                - REJECTED
                - VALIDATED
          description: |-
            * `PENDING` - PENDING
            * `ACCEPTED` - ACCEPTED
            * `REJECTED` - REJECTED
            * `CANCELED` - CANCELED
            * `DECLARED` - DECLARED
            * `CORRECTED` - CORRECTED
            * `VALIDATED` - VALIDATED
            * `DRAFT` - DRAFT
          explode: true
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CREDIT
                - DEBIT
          description: |-
            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          explode: true
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBalanceResponseList"
          description: ""
  /api/tiruert/operations/balance/filters/:
    get:
      operationId: filter_balances
      description: Retrieve content of a specific filter
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: |-
            * `CONV` - Conventionnel
            * `ANN-IX-A` - ANNEXE IX-A
            * `ANN-IX-B` - ANNEXE IX-B
            * `TALLOL` - Tallol
            * `OTHER` - Autre
            * `EP2AM` - EP2AM
          explode: true
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: depot
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - biofuel
              - customs_category
              - sector
          description: Filter string to apply
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              type: string
              enum:
                - ACQUISITION
                - CESSION
                - CUSTOMS_CORRECTION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
                - TRANSFERT
          description: |-
            * `INCORPORATION` - INCORPORATION
            * `CESSION` - CESSION
            * `TENEUR` - TENEUR
            * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
            * `MAC_BIO` - MAC_BIO
            * `EXPORTATION` - EXPORTATION
            * `DEVALUATION` - DEVALUATION
            * `CUSTOMS_CORRECTION` - CUSTOMS_CORRECTION
            * `TRANSFERT` - TRANSFERT
            * `ACQUISITION` - ACQUISITION
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -available_balance
                - -biofuel
                - -created_at
                - -customs_category
                - -depot
                - -from_to
                - -pending_operations
                - -quantity
                - -saved_emissions
                - -sector
                - -status
                - -type
                - available_balance
                - biofuel
                - created_at
                - customs_category
                - depot
                - from_to
                - pending_operations
                - quantity
                - saved_emissions
                - sector
                - status
                - type
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `sector` - Sector
            * `-sector` - Sector (décroissant)
            * `biofuel` - Biofuel
            * `-biofuel` - Biofuel (décroissant)
            * `customs_category` - Customs category
            * `-customs_category` - Customs category (décroissant)
            * `type` - Type
            * `-type` - Type (décroissant)
            * `depot` - Depot
            * `-depot` - Depot (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `available_balance` - available_balance
            * `-available_balance` - available_balance (descending)
            * `pending_operations` - pending_operations
            * `-pending_operations` - pending_operations (descending)
            * `saved_emissions` - saved_emissions
            * `-saved_emissions` - saved_emissions (descending)
          explode: false
          style: form
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: sector
          schema:
            type: array
            items:
              type: string
              enum:
                - CARBURÉACTEUR
                - ESSENCE
                - GAZOLE
          description: |-
            * `ESSENCE` - ESSENCE
            * `GAZOLE` - GAZOLE
            * `CARBURÉACTEUR` - CARBURÉACTEUR
          explode: true
          style: form
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - CORRECTED
                - DECLARED
                - DRAFT
                - PENDING
                - REJECTED
                - VALIDATED
          description: |-
            * `PENDING` - PENDING
            * `ACCEPTED` - ACCEPTED
            * `REJECTED` - REJECTED
            * `CANCELED` - CANCELED
            * `DECLARED` - DECLARED
            * `CORRECTED` - CORRECTED
            * `VALIDATED` - VALIDATED
            * `DRAFT` - DRAFT
          explode: true
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CREDIT
                - DEBIT
          description: |-
            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          explode: true
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/tiruert/operations/export/:
    get:
      operationId: tiruert_operations_export_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationList"
          description: ""
  /api/tiruert/operations/filters/:
    get:
      operationId: filter_operations
      description: Retrieve content of a specific filter
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: |-
            * `CONV` - Conventionnel
            * `ANN-IX-A` - ANNEXE IX-A
            * `ANN-IX-B` - ANNEXE IX-B
            * `TALLOL` - Tallol
            * `OTHER` - Autre
            * `EP2AM` - EP2AM
          explode: true
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: depot
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - biofuel
              - customs_category
              - depot
              - from_to
              - operation
              - period
              - sector
              - status
              - type
          description: Filter string to apply
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: operation
          schema:
            type: array
            items:
              type: string
              enum:
                - ACQUISITION
                - CESSION
                - CUSTOMS_CORRECTION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
                - TRANSFERT
          description: |-
            * `INCORPORATION` - INCORPORATION
            * `CESSION` - CESSION
            * `TENEUR` - TENEUR
            * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
            * `MAC_BIO` - MAC_BIO
            * `EXPORTATION` - EXPORTATION
            * `DEVALUATION` - DEVALUATION
            * `CUSTOMS_CORRECTION` - CUSTOMS_CORRECTION
            * `TRANSFERT` - TRANSFERT
            * `ACQUISITION` - ACQUISITION
          explode: true
          style: form
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -available_balance
                - -biofuel
                - -created_at
                - -customs_category
                - -depot
                - -from_to
                - -pending_operations
                - -quantity
                - -saved_emissions
                - -sector
                - -status
                - -type
                - available_balance
                - biofuel
                - created_at
                - customs_category
                - depot
                - from_to
                - pending_operations
                - quantity
                - saved_emissions
                - sector
                - status
                - type
          description: |-
            Ordre

            * `status` - Status
            * `-status` - Status (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `sector` - Sector
            * `-sector` - Sector (décroissant)
            * `biofuel` - Biofuel
            * `-biofuel` - Biofuel (décroissant)
            * `customs_category` - Customs category
            * `-customs_category` - Customs category (décroissant)
            * `type` - Type
            * `-type` - Type (décroissant)
            * `depot` - Depot
            * `-depot` - Depot (décroissant)
            * `from_to` - From to
            * `-from_to` - From to (décroissant)
            * `quantity` - Quantity
            * `-quantity` - Quantity (décroissant)
            * `available_balance` - available_balance
            * `-available_balance` - available_balance (descending)
            * `pending_operations` - pending_operations
            * `-pending_operations` - pending_operations (descending)
            * `saved_emissions` - saved_emissions
            * `-saved_emissions` - saved_emissions (descending)
          explode: false
          style: form
        - in: query
          name: period
          schema:
            type: array
            items:
              type: string
              minLength: 1
        - in: query
          name: sector
          schema:
            type: array
            items:
              type: string
              enum:
                - CARBURÉACTEUR
                - ESSENCE
                - GAZOLE
          description: |-
            * `ESSENCE` - ESSENCE
            * `GAZOLE` - GAZOLE
            * `CARBURÉACTEUR` - CARBURÉACTEUR
          explode: true
          style: form
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - CORRECTED
                - DECLARED
                - DRAFT
                - PENDING
                - REJECTED
                - VALIDATED
          description: |-
            * `PENDING` - PENDING
            * `ACCEPTED` - ACCEPTED
            * `REJECTED` - REJECTED
            * `CANCELED` - CANCELED
            * `DECLARED` - DECLARED
            * `CORRECTED` - CORRECTED
            * `VALIDATED` - VALIDATED
            * `DRAFT` - DRAFT
          explode: true
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CREDIT
                - DEBIT
          description: |-
            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          explode: true
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/tiruert/operations/simulate/:
    post:
      operationId: simulate
      description: Simulate a blending operation
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationOutput"
          description: ""
  /api/tiruert/operations/simulate/min_max/:
    post:
      operationId: simulation_bounds
      description: Get bounds for blending operation
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationMinMaxInputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SimulationMinMaxInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SimulationMinMaxInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationMinMaxOutput"
          description: ""
  /api/tiruert/operations/teneur/declare/:
    post:
      operationId: declare_teneur
      description: Set teneur operations to DECLARED
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - MJ
              - kg
              - l
          description: Specify the volume unit.
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                status: validated
          description: Success message
        "404":
          content:
            application/json:
              schema:
                error: NOTHING_TO_DECLARE
          description: Error message
  /api/token/:
    post:
      operationId: token_create
      description: >-
        Takes a set of user credentials and returns an access and refresh JSON
        web

        token pair to prove the authentication of those credentials.
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenObtainPairRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenObtainPairRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TokenObtainPairRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenObtainPair"
          description: ""
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRefreshRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRefreshRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TokenRefreshRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenRefresh"
          description: ""
  /api/user/:
    get:
      operationId: user_retrieve
      tags:
        - user
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsResponse"
          description: ""
  /api/user/request-access:
    post:
      operationId: user_request_access_create
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/user/revoke-access:
    post:
      operationId: user_revoke_access_create
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
components:
  schemas:
    AcceptRequest:
      type: object
      properties:
        ets_status:
          $ref: "#/components/schemas/EtsStatusEnum"
      required:
        - ets_status
    ActivateAccountRequest:
      type: object
      properties:
        uidb64:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        invite:
          type: integer
      required:
        - token
        - uidb64
    ActivateResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
      required:
        - message
    AddCertificateRequest:
      type: object
      properties:
        certificate_id:
          type: string
          minLength: 1
        certificate_type:
          type: string
          minLength: 1
      required:
        - certificate_id
        - certificate_type
    AddDepotRequest:
      type: object
      properties:
        delivery_site_id:
          type: string
          minLength: 1
        ownership_type:
          $ref: "#/components/schemas/OwnershipTypeEnum"
        blending_is_outsourced:
          type: boolean
          default: false
        blending_entity_id:
          type: integer
      required:
        - delivery_site_id
        - ownership_type
    AgreementLists:
      type: object
      properties:
        active:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
        incoming:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
        expired:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
      required:
        - active
        - expired
        - incoming
    Airport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 128
        icao_code:
          type: string
          maxLength: 32
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        site_type:
          $ref: "#/components/schemas/SiteTypeEnum"
        address:
          type: string
          maxLength: 256
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        is_ue_airport:
          type: boolean
      required:
        - country
        - id
        - name
    ApplicationFileUploadRequest:
      type: object
      properties:
        extra_files:
          type: array
          items:
            type: string
            format: binary
    ApplicationListe:
      type: object
      properties:
        rejected:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingApplicationPartial"
        pending:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingApplicationPartial"
      required:
        - pending
        - rejected
    ApplicationSnapshot:
      type: object
      properties:
        applications_pending:
          type: integer
        applications_rejected:
          type: integer
        agreements_incoming:
          type: integer
        agreements_active:
          type: integer
        agreements_expired:
          type: integer
      required:
        - agreements_active
        - agreements_expired
        - agreements_incoming
        - applications_pending
        - applications_rejected
    ApproveDoubleCountingRequest:
      type: object
      properties:
        dca_id:
          type: integer
      required:
        - dca_id
    Balance:
      type: object
      properties:
        sector:
          $ref: "#/components/schemas/ObjectiveSectorCodeEnum"
        initial_balance:
          type: number
          format: double
          readOnly: true
        available_balance:
          type: number
          format: double
        quantity:
          $ref: "#/components/schemas/BalanceQuantity"
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        pending_operations:
          type: integer
        unit:
          type: string
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          $ref: "#/components/schemas/BalanceBiofuel"
        ghg_reduction_min:
          type: number
          format: double
        ghg_reduction_max:
          type: number
          format: double
        saved_emissions:
          type: number
          format: double
      required:
        - available_balance
        - biofuel
        - customs_category
        - declared_teneur
        - ghg_reduction_max
        - ghg_reduction_min
        - initial_balance
        - pending_operations
        - pending_teneur
        - quantity
        - saved_emissions
        - sector
        - unit
    BalanceBiofuel:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        renewable_energy_share:
          type: number
          format: double
      required:
        - code
        - id
        - renewable_energy_share
    BalanceByDepot:
      type: object
      properties:
        customs_category:
          type: string
        biofuel:
          $ref: "#/components/schemas/BalanceBiofuel"
        depots:
          type: array
          items:
            $ref: "#/components/schemas/BalanceDepot"
      required:
        - biofuel
        - customs_category
        - depots
    BalanceBySector:
      type: object
      properties:
        sector:
          $ref: "#/components/schemas/ObjectiveSectorCodeEnum"
        initial_balance:
          type: number
          format: double
          readOnly: true
        available_balance:
          type: number
          format: double
        quantity:
          $ref: "#/components/schemas/BalanceQuantity"
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        pending_operations:
          type: integer
        unit:
          type: string
      required:
        - available_balance
        - declared_teneur
        - initial_balance
        - pending_operations
        - pending_teneur
        - quantity
        - sector
        - unit
    BalanceDepot:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          $ref: "#/components/schemas/BalanceQuantity"
        unit:
          type: string
      required:
        - id
        - name
        - quantity
    BalanceQuantity:
      type: object
      properties:
        credit:
          type: number
          format: double
          default: 0
        debit:
          type: number
          format: double
          default: 0
    BalanceResponse:
      oneOf:
        - $ref: "#/components/schemas/Balance"
        - $ref: "#/components/schemas/BalanceByDepot"
        - $ref: "#/components/schemas/BalanceBySector"
    Biofuel:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        name_en:
          type: string
          maxLength: 64
        code:
          type: string
          maxLength: 16
      required:
        - code
        - name
        - name_en
    CarbureLotPublic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        carbure_id:
          type: string
          maxLength: 64
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        production_site_certificate:
          type: string
          nullable: true
          maxLength: 64
        production_site_double_counting_certificate:
          type: string
          nullable: true
          maxLength: 64
        carbure_supplier:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_supplier:
          type: string
          nullable: true
          maxLength: 64
        supplier_certificate:
          type: string
          nullable: true
          maxLength: 64
        supplier_certificate_type:
          type: string
          nullable: true
          maxLength: 64
        transport_document_type:
          $ref: "#/components/schemas/TransportDocumentTypeEnum"
        transport_document_reference:
          type: string
          nullable: true
          maxLength: 128
        carbure_client:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_client:
          type: string
          nullable: true
          maxLength: 64
        dispatch_date:
          type: string
          format: date
          nullable: true
        carbure_dispatch_site:
          allOf:
            - $ref: "#/components/schemas/Depot"
          readOnly: true
        unknown_dispatch_site:
          type: string
          nullable: true
          maxLength: 64
        dispatch_site_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        delivery_date:
          type: string
          format: date
          nullable: true
        carbure_delivery_site:
          allOf:
            - $ref: "#/components/schemas/Depot"
          readOnly: true
        unknown_delivery_site:
          type: string
          nullable: true
          maxLength: 64
        delivery_site_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        delivery_type:
          $ref: "#/components/schemas/DeliveryTypeEnum"
        lot_status:
          $ref: "#/components/schemas/LotStatusEnum"
        correction_status:
          $ref: "#/components/schemas/CorrectionStatusEnum"
        volume:
          type: number
          format: double
        weight:
          type: number
          format: double
        lhv_amount:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
        ghg_reference:
          type: number
          format: double
        ghg_reduction:
          type: number
          format: double
        ghg_reference_red_ii:
          type: number
          format: double
        ghg_reduction_red_ii:
          type: number
          format: double
        free_field:
          type: string
          nullable: true
        added_by:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        carbure_vendor:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        vendor_certificate:
          type: string
          nullable: true
          maxLength: 64
        vendor_certificate_type:
          type: string
          nullable: true
          maxLength: 64
        data_reliability_score:
          type: string
          maxLength: 1
      required:
        - added_by
        - biofuel
        - carbure_client
        - carbure_delivery_site
        - carbure_dispatch_site
        - carbure_producer
        - carbure_production_site
        - carbure_supplier
        - carbure_vendor
        - country_of_origin
        - created_at
        - delivery_site_country
        - dispatch_site_country
        - feedstock
        - id
        - period
        - production_country
        - year
    CarbureNotification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dest:
          $ref: "#/components/schemas/Entity"
        datetime:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: "#/components/schemas/CarbureNotificationTypeEnum"
        acked:
          type: boolean
        send_by_email:
          type: boolean
        email_sent:
          type: boolean
        meta:
          nullable: true
      required:
        - datetime
        - dest
        - id
        - type
    CarbureNotificationTypeEnum:
      enum:
        - CORRECTION_REQUEST
        - CORRECTION_DONE
        - LOTS_REJECTED
        - LOTS_RECEIVED
        - LOTS_RECALLED
        - CERTIFICATE_EXPIRED
        - CERTIFICATE_REJECTED
        - DECLARATION_VALIDATED
        - DECLARATION_CANCELLED
        - METER_READINGS_APP_STARTED
        - METER_READINGS_APP_ENDING_SOON
        - DECLARATION_REMINDER
        - SAF_TICKET_REJECTED
        - SAF_TICKET_ACCEPTED
        - SAF_TICKET_RECEIVED
        - LOTS_UPDATED_BY_ADMIN
        - LOTS_DELETED_BY_ADMIN
        - ELEC_TRANSFER_CERTIFICATE
      type: string
      description: |-
        * `CORRECTION_REQUEST` - CORRECTION_REQUEST
        * `CORRECTION_DONE` - CORRECTION_DONE
        * `LOTS_REJECTED` - LOTS_REJECTED
        * `LOTS_RECEIVED` - LOTS_RECEIVED
        * `LOTS_RECALLED` - LOTS_RECALLED
        * `CERTIFICATE_EXPIRED` - CERTIFICATE_EXPIRED
        * `CERTIFICATE_REJECTED` - CERTIFICATE_REJECTED
        * `DECLARATION_VALIDATED` - DECLARATION_VALIDATED
        * `DECLARATION_CANCELLED` - DECLARATION_CANCELLED
        * `METER_READINGS_APP_STARTED` - METER_READINGS_APP_STARTED
        * `METER_READINGS_APP_ENDING_SOON` - METER_READINGS_APP_ENDING_SOON
        * `DECLARATION_REMINDER` - DECLARATION_REMINDER
        * `SAF_TICKET_REJECTED` - SAF_TICKET_REJECTED
        * `SAF_TICKET_ACCEPTED` - SAF_TICKET_ACCEPTED
        * `SAF_TICKET_RECEIVED` - SAF_TICKET_RECEIVED
        * `LOTS_UPDATED_BY_ADMIN` - LOTS_UPDATED_BY_ADMIN
        * `LOTS_DELETED_BY_ADMIN` - LOTS_DELETED_BY_ADMIN
        * `ELEC_TRANSFER_CERTIFICATE` - ELEC_TRANSFER_CERTIFICATE
    CertificateTypeEnum:
      enum:
        - SYSTEME_NATIONAL
        - ISCC
        - REDCERT
        - 2BS
      type: string
      description: |-
        * `SYSTEME_NATIONAL` - SYSTEME_NATIONAL
        * `ISCC` - ISCC
        * `REDCERT` - REDCERT
        * `2BS` - 2BS
    ChangePasswordError:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur général
        errors:
          type: string
          description: Détails des erreurs de validation
    ChangePasswordRequest:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        confirm_new_password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - confirm_new_password
        - current_password
        - new_password
    ChangePasswordSuccess:
      type: object
      properties:
        status:
          type: string
          default: success
    ChangeRoleRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        role:
          type: string
          minLength: 1
      required:
        - email
        - role
    CheckCertificateRequest:
      type: object
      properties:
        entity_certificate_id:
          type: integer
      required:
        - entity_certificate_id
    CheckFileResponse:
      type: object
      properties:
        file:
          $ref: "#/components/schemas/File"
        checked_at:
          type: string
          format: date-time
      required:
        - checked_at
        - file
    CommentRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
    CompanyPreview:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        legal_name:
          type: string
          maxLength: 255
        registration_id:
          type: string
          maxLength: 50
        registered_address:
          type: string
          maxLength: 500
        registered_city:
          type: string
          maxLength: 255
        registered_zipcode:
          type: string
          maxLength: 20
        registered_country:
          $ref: "#/components/schemas/RegistrationCountry"
      required:
        - legal_name
        - name
        - registered_address
        - registered_city
        - registered_country
        - registered_zipcode
        - registration_id
    ConfirmEmailChangeError:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur général
        errors:
          type: string
          description: Détails des erreurs de validation
        error:
          type: string
          description: Code d'erreur spécifique
    ConfirmEmailChangeRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
        otp_token:
          type: string
          minLength: 1
          maxLength: 6
      required:
        - new_email
        - otp_token
    ConfirmEmailChangeSuccess:
      type: object
      properties:
        status:
          type: string
          default: success
    ConsumptionTypeEnum:
      enum:
        - MAC
        - MAC_DECLASSEMENT
      type: string
      description: |-
        * `MAC` - MAC
        * `MAC_DECLASSEMENT` - MAC_DECLASSEMENT
    CorrectionStatusEnum:
      enum:
        - NO_PROBLEMO
        - IN_CORRECTION
        - FIXED
      type: string
      description: |-
        * `NO_PROBLEMO` - NO_PROBLEMO
        * `IN_CORRECTION` - IN_CORRECTION
        * `FIXED` - FIXED
    Country:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code_pays:
          type: string
          maxLength: 64
        is_in_europe:
          type: boolean
      required:
        - code_pays
        - name
        - name_en
    CreateDepotRequest:
      type: object
      properties:
        country_code:
          type: string
          minLength: 1
          writeOnly: true
        entity_id:
          type: integer
          writeOnly: true
        depot_id:
          type: string
          minLength: 1
        depot_type:
          type: string
          minLength: 1
        ownership_type:
          $ref: "#/components/schemas/OwnershipTypeEnum"
        blending_is_outsourced:
          type: boolean
          default: false
        blending_entity_id:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 128
        site_siret:
          type: string
          maxLength: 64
        customs_id:
          type: string
          maxLength: 32
        icao_code:
          type: string
          maxLength: 32
        site_type:
          $ref: "#/components/schemas/SiteTypeEnum"
        address:
          type: string
          maxLength: 256
        postal_code:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        accise:
          type: string
          maxLength: 32
        electrical_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        thermal_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        useful_temperature:
          type: number
          format: double
          nullable: true
          description: En degrés Celsius
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_number:
          type: string
          maxLength: 64
        dc_reference:
          type: string
          maxLength: 64
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        private:
          type: boolean
        is_enabled:
          type: boolean
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        is_ue_airport:
          type: boolean
        country:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
      required:
        - country_code
        - depot_id
        - depot_type
        - entity_id
        - name
        - ownership_type
    CreateEntityRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        entity_type:
          $ref: "#/components/schemas/EntityTypeEnum"
        has_saf:
          type: boolean
        has_elec:
          type: boolean
      required:
        - name
    DeleteCertificateRequest:
      type: object
      properties:
        certificate_id:
          type: string
          minLength: 1
        certificate_type:
          type: string
          minLength: 1
      required:
        - certificate_id
        - certificate_type
    DeleteDepotRequest:
      type: object
      properties:
        delivery_site_id:
          type: string
          minLength: 1
      required:
        - delivery_site_id
    DeliveryTypeEnum:
      enum:
        - UNKNOWN
        - RFC
        - STOCK
        - BLENDING
        - EXPORT
        - TRADING
        - PROCESSING
        - DIRECT
        - FLUSHED
        - CONSUMPTION
      type: string
      description: |-
        * `UNKNOWN` - UNKNOWN
        * `RFC` - RFC
        * `STOCK` - STOCK
        * `BLENDING` - BLENDING
        * `EXPORT` - EXPORT
        * `TRADING` - TRADING
        * `PROCESSING` - PROCESSING
        * `DIRECT` - DIRECT
        * `FLUSHED` - FLUSHED
        * `CONSUMPTION` - CONSUMPTION
    Depot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 128
        customs_id:
          type: string
          maxLength: 32
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        site_type:
          $ref: "#/components/schemas/SiteTypeEnum"
        address:
          type: string
          maxLength: 256
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        accise:
          type: string
          maxLength: 32
        electrical_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        thermal_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        useful_temperature:
          type: number
          format: double
          nullable: true
          description: En degrés Celsius
      required:
        - country
        - id
        - name
    DepotProductionSite:
      type: object
      properties:
        address:
          type: string
          maxLength: 256
        name:
          type: string
          maxLength: 128
        country:
          $ref: "#/components/schemas/Pays"
        id:
          type: integer
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        site_siret:
          type: string
          maxLength: 64
        postal_code:
          type: string
          maxLength: 32
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        dc_number:
          type: string
          maxLength: 64
        city:
          type: string
          maxLength: 128
        certificates:
          type: array
          items:
            $ref: "#/components/schemas/ProductionSiteCertificateSertificate"
      required:
        - certificates
        - country
        - id
        - name
    DirectDeliveriesRequest:
      type: object
      properties:
        has_direct_deliveries:
          type: boolean
          default: false
    DoubleCountingAdminAddRequest:
      type: object
      properties:
        certificate_id:
          type: string
        entity_id:
          type: integer
        producer_id:
          type: integer
        production_site_id:
          type: integer
        should_replace:
          type: boolean
          default: false
        file:
          type: string
          format: binary
        extra_files:
          type: array
          items:
            type: string
            format: binary
      required:
        - entity_id
        - file
        - producer_id
        - production_site_id
    DoubleCountingAgreementStatus:
      enum:
        - ACTIVE
        - EXPIRED
        - EXPIRES_SOON
        - INCOMING
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `EXPIRED` - EXPIRED
        * `EXPIRES_SOON` - EXPIRES_SOON
        * `INCOMING` - INCOMING
    DoubleCountingApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        producer_user:
          type: string
          format: email
          title: Adresse électronique
          readOnly: true
        production_site:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingProductionSite"
          readOnly: true
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        status:
          $ref: "#/components/schemas/DoubleCountingStatus"
        sourcing:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcing"
          readOnly: true
        production:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProduction"
          readOnly: true
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingDocFile"
          readOnly: true
        download_link:
          type: string
          readOnly: true
        has_dechets_industriels:
          type: boolean
          readOnly: true
      required:
        - created_at
        - documents
        - download_link
        - has_dechets_industriels
        - id
        - period_end
        - period_start
        - producer
        - producer_user
        - production
        - production_site
        - sourcing
    DoubleCountingApplicationPartial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        production_site:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingProductionSitePreview"
          readOnly: true
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingStatus"
          readOnly: true
        certificate_id:
          type: string
          maxLength: 16
        agreement_id:
          type: integer
          readOnly: true
        quotas_progression:
          type: number
          format: double
          readOnly: true
        producer_user:
          type: string
          format: email
          title: Adresse électronique
          readOnly: true
      required:
        - agreement_id
        - certificate_id
        - created_at
        - id
        - period_end
        - period_start
        - producer
        - producer_user
        - production_site
        - quotas_progression
        - status
    DoubleCountingDocFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file_name:
          type: string
          maxLength: 128
        file_type:
          $ref: "#/components/schemas/FileTypeEnum"
        url:
          type: string
          readOnly: true
      required:
        - id
        - url
    DoubleCountingProduction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        max_production_capacity:
          type: integer
          readOnly: true
        estimated_production:
          type: integer
          readOnly: true
        requested_quota:
          type: integer
          readOnly: true
        approved_quota:
          type: integer
          readOnly: true
      required:
        - approved_quota
        - biofuel
        - estimated_production
        - feedstock
        - id
        - max_production_capacity
        - requested_quota
        - year
    DoubleCountingProductionHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        max_production_capacity:
          type: integer
          readOnly: true
        effective_production:
          type: integer
          readOnly: true
      required:
        - biofuel
        - effective_production
        - feedstock
        - id
        - max_production_capacity
        - year
    DoubleCountingProductionSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        name:
          type: string
          maxLength: 128
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        site_siret:
          type: string
          maxLength: 64
        address:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 128
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/FeedStock"
          readOnly: true
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/Biofuel"
          readOnly: true
        certificates:
          type: array
          items:
            $ref: "#/components/schemas/ProductionSiteCertificate"
          readOnly: true
      required:
        - certificates
        - country
        - id
        - inputs
        - name
        - outputs
        - producer
    DoubleCountingProductionSitePreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
      required:
        - id
        - name
    DoubleCountingQuota:
      type: object
      properties:
        approved_quota:
          type: integer
        biofuel:
          $ref: "#/components/schemas/Biofuel"
        feedstock:
          $ref: "#/components/schemas/FeedStock"
        id:
          type: integer
        lot_count:
          type: integer
        production_tonnes:
          type: integer
        quotas_progression:
          type: integer
        requested_quota:
          type: integer
        year:
          type: integer
      required:
        - approved_quota
        - biofuel
        - feedstock
        - id
        - lot_count
        - production_tonnes
        - quotas_progression
        - requested_quota
        - year
    DoubleCountingRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        production_site:
          type: string
          readOnly: true
        valid_until:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingAgreementStatus"
          readOnly: true
        quotas_progression:
          type: number
          format: double
          readOnly: true
      required:
        - certificate_id
        - id
        - producer
        - production_site
        - quotas_progression
        - status
        - valid_from
        - valid_until
    DoubleCountingRegistrationDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingAgreementStatus"
          readOnly: true
        producer:
          type: string
          readOnly: true
        production_site:
          type: string
          readOnly: true
        application:
          $ref: "#/components/schemas/DoubleCountingApplication"
        quotas:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingQuota"
          readOnly: true
      required:
        - application
        - certificate_id
        - id
        - producer
        - production_site
        - quotas
        - status
        - valid_from
        - valid_until
    DoubleCountingRegistrationPublic:
      type: object
      properties:
        production_site:
          allOf:
            - $ref: "#/components/schemas/FieldData"
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        biofuel_list:
          type: string
          readOnly: true
      required:
        - biofuel_list
        - certificate_id
        - production_site
        - valid_from
        - valid_until
    DoubleCountingSourcing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        origin_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        supply_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        transit_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        metric_tonnes:
          type: integer
          readOnly: true
      required:
        - feedstock
        - id
        - metric_tonnes
        - origin_country
        - supply_country
        - transit_country
        - year
    DoubleCountingSourcingHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        origin_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        supply_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        transit_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        metric_tonnes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        raw_material_supplier:
          type: string
          maxLength: 128
        supplier_certificate_name:
          type: string
          maxLength: 64
        supplier_certificate:
          type: integer
          nullable: true
      required:
        - feedstock
        - id
        - metric_tonnes
        - origin_country
        - supply_country
        - transit_country
        - year
    DoubleCountingStatus:
      enum:
        - PENDING
        - INPROGRESS
        - REJECTED
        - ACCEPTED
      type: string
      description: |-
        * `PENDING` - PENDING
        * `INPROGRESS` - INPROGRESS
        * `REJECTED` - REJECTED
        * `ACCEPTED` - ACCEPTED
    ElecBalance:
      type: object
      properties:
        sector:
          $ref: "#/components/schemas/ElecBalanceSectorEnum"
        initial_balance:
          type: number
          format: double
          readOnly: true
        available_balance:
          type: number
          format: double
        quantity:
          $ref: "#/components/schemas/BalanceQuantity"
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        pending_operations:
          type: integer
      required:
        - available_balance
        - declared_teneur
        - initial_balance
        - pending_operations
        - pending_teneur
        - quantity
        - sector
    ElecBalanceSectorEnum:
      enum:
        - ELEC
      type: string
      description: "* `ELEC` - ELEC"
    ElecOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          $ref: "#/components/schemas/ElecOperationStatusEnum"
        credited_entity:
          $ref: "#/components/schemas/ElecOperationEntity"
        debited_entity:
          $ref: "#/components/schemas/ElecOperationEntity"
        quantity:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
          readOnly: true
        avoided_emissions:
          type: number
          format: double
      required:
        - avoided_emissions
        - created_at
        - credited_entity
        - debited_entity
        - id
        - type
    ElecOperationEntity:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    ElecOperationInputRequest:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ElecOperationTypeEnum"
        credited_entity:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        quantity:
          type: number
          format: double
      required:
        - type
    ElecOperationList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          $ref: "#/components/schemas/ElecOperationStatusEnum"
        credited_entity:
          $ref: "#/components/schemas/ElecOperationEntity"
        debited_entity:
          $ref: "#/components/schemas/ElecOperationEntity"
        quantity:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - credited_entity
        - debited_entity
        - id
        - type
    ElecOperationStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - CANCELED
        - DECLARED
      type: string
      description: |-
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
        * `CANCELED` - CANCELED
        * `DECLARED` - DECLARED
    ElecOperationTypeEnum:
      enum:
        - ACQUISITION_FROM_CPO
        - CESSION
        - TENEUR
      type: string
      description: |-
        * `ACQUISITION_FROM_CPO` - ACQUISITION_FROM_CPO
        * `CESSION` - CESSION
        * `TENEUR` - TENEUR
    ElecProvisionCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cpo:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        source:
          allOf:
            - $ref: "#/components/schemas/SourceEnum"
          nullable: true
        quarter:
          allOf:
            - $ref: "#/components/schemas/QuarterEnum"
          minimum: -2147483648
          maximum: 2147483647
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        operating_unit:
          type: string
          maxLength: 64
        energy_amount:
          type: number
          format: double
        remaining_energy_amount:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
        - cpo
        - created_at
        - energy_amount
        - id
        - operating_unit
        - quarter
        - remaining_energy_amount
        - year
    ElecProvisionCertificateQualicharge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        operating_unit:
          type: string
          maxLength: 64
        station_id:
          type: string
          maxLength: 64
        energy_amount:
          type: number
          format: double
        is_controlled_by_qualicharge:
          type: boolean
        validated_by:
          $ref: "#/components/schemas/ValidatedByEnum"
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        cpo:
          type: integer
      required:
        - cpo
        - created_at
        - date_from
        - date_to
        - energy_amount
        - id
        - operating_unit
        - station_id
        - year
    ElecTransferAcceptRequest:
      type: object
      properties:
        used_in_tiruert:
          type: string
          minLength: 1
        consumption_date:
          type: string
          format: date
      required:
        - used_in_tiruert
    ElecTransferCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        client:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        transfer_date:
          type: string
          format: date
        energy_amount:
          type: number
          format: double
        status:
          $ref: "#/components/schemas/ElecTransferCertificateStatusEnum"
        certificate_id:
          type: string
          maxLength: 32
        used_in_tiruert:
          type: boolean
        consumption_date:
          type: string
          format: date
          nullable: true
      required:
        - certificate_id
        - client
        - energy_amount
        - id
        - supplier
        - transfer_date
    ElecTransferCertificateStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
      type: string
      description: |-
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
    ElecTransferRejectRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
        - comment
    ElecTransferRequest:
      type: object
      properties:
        energy_amount:
          type: number
          format: double
        client:
          type: integer
      required:
        - client
        - energy_amount
    EmptyResponse:
      type: object
      properties:
        empty:
          type: string
    EmptyResponseRequest:
      type: object
      properties:
        empty:
          type: string
          minLength: 1
    Entity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        entity_type:
          $ref: "#/components/schemas/EntityTypeEnum"
        has_mac:
          type: boolean
        has_trading:
          type: boolean
        has_direct_deliveries:
          type: boolean
        has_stocks:
          type: boolean
        preferred_unit:
          $ref: "#/components/schemas/PreferredUnitEnum"
        legal_name:
          type: string
          maxLength: 128
        registration_id:
          type: string
          maxLength: 64
        sustainability_officer_phone_number:
          type: string
          maxLength: 32
        sustainability_officer:
          type: string
          maxLength: 256
        registered_address:
          type: string
          maxLength: 256
        registered_zipcode:
          type: string
          maxLength: 64
        registered_city:
          type: string
          maxLength: 64
        registered_country:
          type: integer
          nullable: true
        activity_description:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
        vat_number:
          type: string
          maxLength: 32
        is_enabled:
          type: boolean
      required:
        - id
        - name
    EntityBiofuel:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        name_en:
          type: string
          maxLength: 64
        code:
          type: string
          maxLength: 16
      required:
        - code
        - name
        - name_en
    EntityCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        entity:
          $ref: "#/components/schemas/Entity"
        certificate:
          $ref: "#/components/schemas/GenericCertificate"
        has_been_updated:
          type: boolean
        checked_by_admin:
          type: boolean
        rejected_by_admin:
          type: boolean
        added_dt:
          type: string
          format: date-time
          readOnly: true
      required:
        - added_dt
        - certificate
        - entity
        - id
    EntityCompanyRequest:
      type: object
      properties:
        certificate_type:
          $ref: "#/components/schemas/CertificateTypeEnum"
        certificate_id:
          type: string
          minLength: 1
        activity_description:
          type: string
        entity_type:
          $ref: "#/components/schemas/EntityTypeEnum"
        name:
          type: string
          minLength: 1
          maxLength: 64
        legal_name:
          type: string
          maxLength: 128
        registered_address:
          type: string
          maxLength: 256
        registered_city:
          type: string
          maxLength: 64
        registered_country:
          type: string
          minLength: 1
        registered_zipcode:
          type: string
          maxLength: 64
        registration_id:
          type: string
          maxLength: 64
        sustainability_officer:
          type: string
          maxLength: 256
        sustainability_officer_email:
          type: string
          maxLength: 254
        sustainability_officer_phone_number:
          type: string
          maxLength: 32
        website:
          type: string
          format: uri
          maxLength: 200
        vat_number:
          type: string
          maxLength: 32
      required:
        - name
    EntityCountry:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code_pays:
          type: string
          maxLength: 64
        is_in_europe:
          type: boolean
      required:
        - code_pays
        - name
        - name_en
    EntityDepot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customs_id:
          type: string
          maxLength: 32
        name:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 128
        country:
          $ref: "#/components/schemas/Pays"
        site_type:
          $ref: "#/components/schemas/SiteTypeEnum"
        address:
          type: string
          maxLength: 256
        postal_code:
          type: string
          maxLength: 32
        electrical_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        thermal_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        useful_temperature:
          type: number
          format: double
          nullable: true
          description: En degrés Celsius
        is_enabled:
          type: boolean
      required:
        - country
        - id
        - name
    EntityFeedStock:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code:
          type: string
          maxLength: 64
        category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        is_double_compte:
          type: boolean
      required:
        - code
        - name
        - name_en
    EntityMetrics:
      type: object
      properties:
        entity:
          $ref: "#/components/schemas/UserEntity"
        users:
          type: integer
        requests:
          type: integer
        depots:
          type: integer
        production_sites:
          type: integer
        certificates:
          type: integer
        certificates_pending:
          type: integer
        double_counting:
          type: integer
        double_counting_requests:
          type: integer
        charge_points_accepted:
          type: integer
        charge_points_pending:
          type: integer
        meter_readings_accepted:
          type: integer
        meter_readings_pending:
          type: integer
      required:
        - certificates
        - certificates_pending
        - charge_points_accepted
        - charge_points_pending
        - depots
        - double_counting
        - double_counting_requests
        - entity
        - meter_readings_accepted
        - meter_readings_pending
        - production_sites
        - requests
        - users
    EntityPreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
        registration_id:
          type: string
          readOnly: true
      required:
        - entity_type
        - id
        - name
        - registration_id
    EntityProductionSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 256
        name:
          type: string
          maxLength: 128
        country:
          allOf:
            - $ref: "#/components/schemas/EntityCountry"
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        site_siret:
          type: string
          maxLength: 64
        postal_code:
          type: string
          maxLength: 32
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        dc_number:
          type: string
          maxLength: 64
        city:
          type: string
          maxLength: 128
        certificates:
          type: array
          items:
            $ref: "#/components/schemas/GenericCertificate"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/EntityFeedStock"
          readOnly: true
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/EntityBiofuel"
          readOnly: true
      required:
        - certificates
        - country
        - id
        - inputs
        - name
        - outputs
    EntitySite:
      type: object
      properties:
        ownership_type:
          $ref: "#/components/schemas/OwnershipTypeEnum"
        blending_is_outsourced:
          type: boolean
        blender:
          $ref: "#/components/schemas/UserEntity"
        depot:
          allOf:
            - $ref: "#/components/schemas/EntityDepot"
          readOnly: true
          nullable: true
        site:
          allOf:
            - $ref: "#/components/schemas/DepotProductionSite"
          readOnly: true
          nullable: true
      required:
        - blender
        - blending_is_outsourced
        - depot
        - ownership_type
        - site
    EntitySummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
      required:
        - entity_type
        - id
        - name
    EntityTypeEnum:
      enum:
        - Producteur
        - Opérateur
        - Administration
        - Trader
        - Auditor
        - Administration Externe
        - Charge Point Operator
        - Compagnie aérienne
        - Unknown
        - Power or Heat Producer
        - SAF Trader
      type: string
      description: |-
        * `Producteur` - Producteur
        * `Opérateur` - Opérateur
        * `Administration` - Administration
        * `Trader` - Trader
        * `Auditor` - Auditeur
        * `Administration Externe` - Administration Externe
        * `Charge Point Operator` - Charge Point Operator
        * `Compagnie aérienne` - Compagnie aérienne
        * `Unknown` - Unknown
        * `Power or Heat Producer` - Producteur d'électricité ou de chaleur
        * `SAF Trader` - Trader de SAF
      x-enum-varnames:
        - Producer
        - Operator
        - Administration
        - Trader
        - Auditor
        - ExternalAdmin
        - CPO
        - Airline
        - Unknown
        - PowerOrHeatProducer
    EntityUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 255
      required:
        - email
        - id
        - name
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    EtsStatusEnum:
      enum:
        - ETS_VALUATION
        - OUTSIDE_ETS
        - NOT_CONCERNED
      type: string
      description: |-
        * `ETS_VALUATION` - Valorisation ETS
        * `OUTSIDE_ETS` - Hors ETS (volontaire)
        * `NOT_CONCERNED` - Non concerné
    ExtAdminPagesEnum:
      enum:
        - DCA
        - AGRIMER
        - TIRIB
        - AIRLINE
        - ELEC
        - TRANSFERRED_ELEC
      type: string
      description: |-
        * `DCA` - DCA
        * `AGRIMER` - AGRIMER
        * `TIRIB` - TIRIB
        * `AIRLINE` - AIRLINE
        * `ELEC` - ELEC
        * `TRANSFERRED_ELEC` - TRANSFERRED_ELEC
    FeedStock:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code:
          type: string
          maxLength: 64
        category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        is_double_compte:
          type: boolean
      required:
        - code
        - name
        - name_en
    FieldData:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        address:
          type: string
        postal_code:
          type: string
        country:
          type: string
      required:
        - address
        - city
        - country
        - name
        - postal_code
    File:
      type: object
      properties:
        file_name:
          type: string
        errors:
          $ref: "#/components/schemas/FileErrors"
        error_count:
          type: integer
        start_year:
          type: integer
        production_site:
          type: string
        producer_email:
          type: string
          format: email
        production:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProduction"
        sourcing:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcing"
        sourcing_history:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcingHistory"
        production_history:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProductionHistory"
        has_dechets_industriels:
          type: boolean
          readOnly: true
      required:
        - error_count
        - errors
        - file_name
        - has_dechets_industriels
        - producer_email
        - production
        - production_history
        - production_site
        - sourcing
        - sourcing_history
        - start_year
    FileError:
      type: object
      properties:
        error:
          type: string
        is_blocking:
          type: boolean
        line_number:
          type: integer
        line_merged:
          type: string
        meta:
          type: object
          additionalProperties: {}
      required:
        - error
        - is_blocking
        - line_merged
        - line_number
        - meta
    FileErrors:
      type: object
      properties:
        sourcing_forecast:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        sourcing_history:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        production:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        production_history:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        global_errors:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
      required:
        - global_errors
        - production
        - production_history
        - sourcing_forecast
        - sourcing_history
    FileTypeEnum:
      enum:
        - EXCEL
        - EXTRA
        - DECISION
      type: string
      description: |-
        * `EXCEL` - EXCEL
        * `EXTRA` - EXTRA
        * `DECISION` - DECISION
    GenericCertificate:
      type: object
      properties:
        certificate_id:
          type: string
          maxLength: 64
        certificate_type:
          $ref: "#/components/schemas/CertificateTypeEnum"
        certificate_holder:
          type: string
          maxLength: 512
        certificate_issuer:
          type: string
          nullable: true
          maxLength: 256
        address:
          type: string
          nullable: true
          maxLength: 512
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        download_link:
          type: string
          nullable: true
          maxLength: 512
        scope:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
      required:
        - certificate_holder
        - certificate_id
        - certificate_type
        - valid_from
        - valid_until
    GesOptionEnum:
      enum:
        - Default
        - Actual
        - NUTS2
      type: string
      description: |-
        * `Default` - Valeurs par défaut
        * `Actual` - Valeurs réelles
        * `NUTS2` - Valeurs NUTS2
    GrantAccessRequest:
      type: object
      properties:
        request_id:
          type: integer
      required:
        - request_id
    GroupAssignmentResponse:
      type: object
      properties:
        assigned_tickets_count:
          type: integer
      required:
        - assigned_tickets_count
    InviteUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        role:
          type: string
          minLength: 1
      required:
        - email
        - role
    LotStatusEnum:
      enum:
        - DRAFT
        - PENDING
        - ACCEPTED
        - REJECTED
        - FROZEN
        - DELETED
      type: string
      description: |-
        * `DRAFT` - DRAFT
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
        * `FROZEN` - FROZEN
        * `DELETED` - DELETED
    MPCategoriesEnum:
      enum:
        - CONV
        - ANN-IX-A
        - ANN-IX-B
        - TALLOL
        - OTHER
        - EP2AM
      type: string
      description: |-
        * `CONV` - Conventionnel
        * `ANN-IX-A` - ANNEXE IX-A
        * `ANN-IX-B` - ANNEXE IX-B
        * `TALLOL` - Tallol
        * `OTHER` - Autre
        * `EP2AM` - EP2AM
    MainObjective:
      type: object
      properties:
        available_balance:
          type: number
          format: double
        target:
          type: number
          format: double
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        unit:
          type: string
        penalty:
          type: integer
        target_percent:
          type: number
          format: double
        energy_basis:
          type: number
          format: double
      required:
        - available_balance
        - declared_teneur
        - energy_basis
        - penalty
        - pending_teneur
        - target
        - target_percent
        - unit
    NavStats:
      type: object
      properties:
        total_pending_action_for_admin:
          type: integer
        pending_draft_lots:
          type: integer
        in_pending_lots:
          type: integer
        doublecount_agreement_pending:
          type: integer
        charge_point_registration_pending:
          type: integer
        metering_reading_pending:
          type: integer
        pending_transfer_certificates:
          type: integer
        audits:
          type: integer
        tickets:
          type: integer
    NotificationRequest:
      type: object
      properties:
        notification_ids:
          type: array
          items:
            type: integer
      required:
        - notification_ids
    Objective:
      type: object
      properties:
        target_mj:
          type: number
          format: double
        target_type:
          type: string
        penalty:
          type: integer
        target_percent:
          type: number
          format: double
      required:
        - penalty
        - target_mj
        - target_percent
        - target_type
    ObjectiveCategory:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/MPCategoriesEnum"
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        available_balance:
          type: number
          format: double
        unit:
          type: string
        objective:
          $ref: "#/components/schemas/Objective"
      required:
        - available_balance
        - code
        - declared_teneur
        - objective
        - pending_teneur
        - unit
    ObjectiveOutput:
      type: object
      properties:
        main:
          $ref: "#/components/schemas/MainObjective"
        sectors:
          type: array
          items:
            $ref: "#/components/schemas/ObjectiveSector"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/ObjectiveCategory"
      required:
        - categories
        - main
        - sectors
    ObjectiveSector:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/ObjectiveSectorCodeEnum"
        pending_teneur:
          type: number
          format: double
        declared_teneur:
          type: number
          format: double
        available_balance:
          type: number
          format: double
        unit:
          type: string
        objective:
          $ref: "#/components/schemas/Objective"
      required:
        - available_balance
        - code
        - declared_teneur
        - objective
        - pending_teneur
        - unit
    ObjectiveSectorCodeEnum:
      enum:
        - ESSENCE
        - GAZOLE
        - CARBURÉACTEUR
      type: string
      description: |-
        * `ESSENCE` - ESSENCE
        * `GAZOLE` - GAZOLE
        * `CARBURÉACTEUR` - CARBURÉACTEUR
    Operation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          $ref: "#/components/schemas/OperationStatusEnum"
        sector:
          type: string
          readOnly: true
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          type: string
          readOnly: true
        renewable_energy_share:
          type: number
          format: double
        credited_entity:
          $ref: "#/components/schemas/OperationEntity"
        debited_entity:
          $ref: "#/components/schemas/OperationEntity"
        _entity:
          type: string
          readOnly: true
          title: " entity"
        from_depot:
          $ref: "#/components/schemas/OperationDepot"
        to_depot:
          $ref: "#/components/schemas/OperationDepot"
        _depot:
          type: string
          readOnly: true
          title: " depot"
        export_country:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        validation_date:
          type: string
          format: date
          nullable: true
        durability_period:
          type: string
          nullable: true
          maxLength: 6
        quantity:
          type: number
          format: double
          readOnly: true
        quantity_mj:
          type: number
          format: double
          readOnly: true
        avoided_emissions:
          type: number
          format: double
          readOnly: true
        unit:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: "#/components/schemas/OperationDetail"
      required:
        - _depot
        - _entity
        - avoided_emissions
        - biofuel
        - created_at
        - credited_entity
        - debited_entity
        - from_depot
        - id
        - quantity
        - quantity_mj
        - renewable_energy_share
        - sector
        - to_depot
        - type
        - unit
    OperationCorrectionRequest:
      type: object
      properties:
        correction_volume:
          type: number
          format: double
      required:
        - correction_volume
    OperationDepot:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    OperationDetail:
      type: object
      properties:
        lot:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - lot
    OperationEntity:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    OperationInputRequest:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/OperationTypeEnum"
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          type: integer
          nullable: true
        credited_entity:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        from_depot:
          type: integer
          nullable: true
        to_depot:
          type: integer
          nullable: true
        export_country:
          type: integer
          nullable: true
        lots:
          type: array
          items:
            $ref: "#/components/schemas/OperationLotRequest"
        status:
          $ref: "#/components/schemas/OperationStatusEnum"
      required:
        - biofuel
        - customs_category
        - debited_entity
        - lots
        - type
    OperationList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          $ref: "#/components/schemas/OperationStatusEnum"
        sector:
          type: string
          readOnly: true
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          type: string
          readOnly: true
        renewable_energy_share:
          type: number
          format: double
        credited_entity:
          $ref: "#/components/schemas/OperationEntity"
        debited_entity:
          $ref: "#/components/schemas/OperationEntity"
        _entity:
          type: string
          readOnly: true
          title: " entity"
        from_depot:
          $ref: "#/components/schemas/OperationDepot"
        to_depot:
          $ref: "#/components/schemas/OperationDepot"
        _depot:
          type: string
          readOnly: true
          title: " depot"
        export_country:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        quantity:
          type: number
          format: double
          readOnly: true
        unit:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: "#/components/schemas/OperationDetail"
      required:
        - _depot
        - _entity
        - biofuel
        - created_at
        - credited_entity
        - debited_entity
        - from_depot
        - id
        - quantity
        - renewable_energy_share
        - sector
        - to_depot
        - type
        - unit
    OperationLotRequest:
      type: object
      properties:
        id:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - emission_rate_per_mj
        - id
        - volume
    OperationStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - CANCELED
        - DECLARED
        - CORRECTED
        - VALIDATED
        - DRAFT
      type: string
      description: |-
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
        * `CANCELED` - CANCELED
        * `DECLARED` - DECLARED
        * `CORRECTED` - CORRECTED
        * `VALIDATED` - VALIDATED
        * `DRAFT` - DRAFT
    OperationTypeEnum:
      enum:
        - INCORPORATION
        - CESSION
        - TENEUR
        - LIVRAISON_DIRECTE
        - MAC_BIO
        - EXPORTATION
        - DEVALUATION
        - CUSTOMS_CORRECTION
        - TRANSFERT
      type: string
      description: |-
        * `INCORPORATION` - INCORPORATION
        * `CESSION` - CESSION
        * `TENEUR` - TENEUR
        * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
        * `MAC_BIO` - MAC_BIO
        * `EXPORTATION` - EXPORTATION
        * `DEVALUATION` - DEVALUATION
        * `CUSTOMS_CORRECTION` - CUSTOMS_CORRECTION
        * `TRANSFERT` - TRANSFERT
    OperationalUnitRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 5
          maxLength: 5
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        stations:
          type: array
          items:
            $ref: "#/components/schemas/StationRequest"
      required:
        - code
        - from
        - to
    OtpResponse:
      type: object
      properties:
        valid_until:
          type: string
      required:
        - valid_until
    OwnershipTypeEnum:
      enum:
        - OWN
        - THIRD_PARTY
        - PROCESSING
      type: string
      description: |-
        * `OWN` - Propre
        * `THIRD_PARTY` - Tiers
        * `PROCESSING` - Processing
    PaginatedBalanceResponseList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/BalanceResponse"
        total_quantity:
          type: number
    PaginatedElecBalanceList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/ElecBalance"
        total_quantity:
          type: number
    PaginatedElecOperationListList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/ElecOperationList"
        total_quantity:
          type: number
    PaginatedElecProvisionCertificateList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/ElecProvisionCertificate"
        available_energy:
          type: number
    PaginatedElecProvisionCertificateQualichargeList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/ElecProvisionCertificateQualicharge"
    PaginatedElecTransferCertificateList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/ElecTransferCertificate"
        transferred_energy:
          type: number
    PaginatedEntityPreviewList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/EntityPreview"
    PaginatedOperationListList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/OperationList"
        total_quantity:
          type: number
    PaginatedSafTicketPreviewList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/SafTicketPreview"
        total_volume:
          type: number
    PaginatedSafTicketSourcePreviewList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/SafTicketSourcePreview"
        total_available_volume:
          type: number
    PatchedElecOperationUpdateRequest:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ElecOperationTypeEnum"
        credited_entity:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        quantity:
          type: number
          format: double
    PatchedOperationUpdateRequest:
      type: object
      properties:
        to_depot:
          type: integer
          nullable: true
        status:
          $ref: "#/components/schemas/OperationStatusEnum"
    Pays:
      type: object
      properties:
        code_pays:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        is_in_europe:
          type: boolean
      required:
        - code_pays
        - name
        - name_en
    PreferredUnitEnum:
      enum:
        - l
        - kg
        - MJ
      type: string
      description: |-
        * `l` - litres
        * `kg` - kg
        * `MJ` - MJ
    ProductionSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        name:
          type: string
          maxLength: 128
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        site_siret:
          type: string
          maxLength: 64
        address:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 128
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
      required:
        - country
        - id
        - name
        - producer
    ProductionSiteCertificate:
      type: object
      properties:
        certificate_id:
          type: string
          maxLength: 64
        certificate_type:
          $ref: "#/components/schemas/CertificateTypeEnum"
        certificate_holder:
          type: string
          maxLength: 512
        certificate_issuer:
          type: string
          nullable: true
          maxLength: 256
        address:
          type: string
          nullable: true
          maxLength: 512
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        download_link:
          type: string
          nullable: true
          maxLength: 512
        scope:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
      required:
        - certificate_holder
        - certificate_id
        - certificate_type
        - valid_from
        - valid_until
    ProductionSiteCertificateSertificate:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        certificate_id:
          type: string
          readOnly: true
      required:
        - certificate_id
        - type
    ProductionSiteModelRequest:
      type: object
      properties:
        country_code:
          type: string
          minLength: 1
        country:
          type: integer
          nullable: true
        name:
          type: string
          minLength: 1
          maxLength: 128
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        site_siret:
          type: string
          maxLength: 64
        postal_code:
          type: string
          maxLength: 32
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        city:
          type: string
          maxLength: 128
        address:
          type: string
          maxLength: 256
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        created_by:
          type: integer
          nullable: true
      required:
        - address
        - city
        - country_code
        - date_mise_en_service
        - eligible_dc
        - ges_option
        - manager_email
        - manager_name
        - manager_phone
        - name
        - postal_code
        - site_siret
    ProvisionCertificateBulkRequest:
      type: object
      properties:
        entity:
          type: string
          minLength: 1
        siren:
          type: string
          minLength: 9
        operational_units:
          type: array
          items:
            $ref: "#/components/schemas/OperationalUnitRequest"
      required:
        - entity
        - operational_units
        - siren
    ProvisionCertificateUpdateBulkRequest:
      type: object
      properties:
        certificate_ids:
          type: array
          items:
            type: integer
          minItems: 1
        validated_by:
          $ref: "#/components/schemas/ValidatedByEnum"
      required:
        - certificate_ids
        - validated_by
    QuarterEnum:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: |-
        * `1` - T1
        * `2` - T2
        * `3` - T3
        * `4` - T4
    RegistrationCountry:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        name_en:
          type: string
          maxLength: 255
        code_pays:
          type: string
          maxLength: 10
        is_in_europe:
          type: boolean
      required:
        - code_pays
        - is_in_europe
        - name
        - name_en
    RejectCertificateRequest:
      type: object
      properties:
        entity_certificate_id:
          type: integer
      required:
        - entity_certificate_id
    RejectDoubleCountingRequest:
      type: object
      properties:
        dca_id:
          type: integer
      required:
        - dca_id
    RequestAccessRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        role:
          type: string
          minLength: 1
        entity_id:
          type: integer
      required:
        - entity_id
        - role
    RequestEmailChangeError:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur général
        errors:
          type: string
          description: Détails des erreurs de validation
    RequestEmailChangeRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - new_email
        - password
    RequestEmailChangeSuccess:
      type: object
      properties:
        status:
          type: string
          default: otp_sent
    RequestPasswordResetRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
      required:
        - username
    ResetPasswordRequest:
      type: object
      properties:
        uidb64:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
          title: Mot de passe
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirmation du mot de passe
      required:
        - password1
        - password2
        - token
        - uidb64
    Response:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    ResponseData:
      type: object
      properties:
        company_preview:
          $ref: "#/components/schemas/CompanyPreview"
        warning:
          $ref: "#/components/schemas/Warning"
      required:
        - company_preview
    ResponseSuccess:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    RevokeAccessRequest:
      type: object
      properties:
        entity_id:
          type: integer
      required:
        - entity_id
    RevokeUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
        - email
    RoleEnum:
      enum:
        - RO
        - RW
        - ADMIN
        - AUDITOR
      type: string
      description: |-
        * `RO` - Lecture Seule
        * `RW` - Lecture/Écriture
        * `ADMIN` - Administrateur
        * `AUDITOR` - Auditeur
      x-enum-varnames:
        - ReadOnly
        - ReadWrite
        - Admin
        - Auditor
    SafAssignedTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        client:
          type: string
          readOnly: true
        agreement_date:
          type: string
          format: date
          nullable: true
        volume:
          type: number
          format: double
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        assignment_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
        - assignment_period
        - client
        - created_at
        - id
        - volume
    SafParentLot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          maxLength: 64
      required:
        - id
    SafParentTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
      required:
        - id
    SafRelatedTicketSource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
      required:
        - assigned_volume
        - id
        - total_volume
    SafTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        assignment_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        agreement_date:
          type: string
          format: date
          nullable: true
        supplier:
          type: string
          readOnly: true
        client:
          type: string
          readOnly: true
        volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
        consumption_type:
          allOf:
            - $ref: "#/components/schemas/ConsumptionTypeEnum"
          nullable: true
        ets_status:
          allOf:
            - $ref: "#/components/schemas/EtsStatusEnum"
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        reception_airport:
          allOf:
            - $ref: "#/components/schemas/Airport"
          readOnly: true
        free_field:
          type: string
          nullable: true
        agreement_reference:
          type: string
          nullable: true
          maxLength: 64
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
        client_comment:
          type: string
          nullable: true
        parent_ticket_source:
          allOf:
            - $ref: "#/components/schemas/SafRelatedTicketSource"
          readOnly: true
        shipping_method:
          allOf:
            - $ref: "#/components/schemas/ShippingMethodEnum"
          nullable: true
        child_ticket_sources:
          type: array
          items:
            $ref: "#/components/schemas/SafRelatedTicketSource"
          readOnly: true
      required:
        - assignment_period
        - biofuel
        - carbure_producer
        - carbure_production_site
        - child_ticket_sources
        - client
        - country_of_origin
        - created_at
        - feedstock
        - id
        - parent_ticket_source
        - reception_airport
        - supplier
        - volume
        - year
    SafTicketPreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        assignment_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        agreement_date:
          type: string
          format: date
          nullable: true
        supplier:
          type: string
          readOnly: true
        client:
          type: string
          readOnly: true
        volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
        consumption_type:
          allOf:
            - $ref: "#/components/schemas/ConsumptionTypeEnum"
          nullable: true
        ets_status:
          allOf:
            - $ref: "#/components/schemas/EtsStatusEnum"
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        reception_airport:
          allOf:
            - $ref: "#/components/schemas/Airport"
          readOnly: true
      required:
        - assignment_period
        - biofuel
        - client
        - country_of_origin
        - created_at
        - feedstock
        - id
        - reception_airport
        - supplier
        - volume
        - year
    SafTicketSource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        delivery_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
        assigned_tickets:
          type: array
          items:
            $ref: "#/components/schemas/SafAssignedTicket"
          readOnly: true
        parent_lot:
          $ref: "#/components/schemas/CarbureLotPublic"
        parent_ticket:
          $ref: "#/components/schemas/SafParentTicket"
        added_by:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
      required:
        - added_by
        - assigned_tickets
        - assigned_volume
        - biofuel
        - carbure_producer
        - carbure_production_site
        - country_of_origin
        - created_at
        - delivery_period
        - feedstock
        - id
        - total_volume
        - year
    SafTicketSourceAssignment:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
        agreement_date:
          type: string
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
        reception_airport:
          type: integer
          nullable: true
        consumption_type:
          type: string
          nullable: true
        shipping_method:
          type: string
          nullable: true
      required:
        - assignment_period
        - client_id
        - volume
    SafTicketSourceAssignmentRequest:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
          minLength: 1
        agreement_date:
          type: string
          minLength: 1
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
        reception_airport:
          type: integer
          nullable: true
        consumption_type:
          type: string
          nullable: true
        shipping_method:
          type: string
          nullable: true
      required:
        - assignment_period
        - client_id
        - volume
    SafTicketSourceGroupAssignmentRequest:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
          minLength: 1
        agreement_date:
          type: string
          minLength: 1
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
        reception_airport:
          type: integer
          nullable: true
        consumption_type:
          type: string
          nullable: true
        shipping_method:
          type: string
          nullable: true
        ticket_sources_ids:
          type: array
          items:
            type: integer
      required:
        - assignment_period
        - client_id
        - ticket_sources_ids
        - volume
    SafTicketSourcePreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        delivery_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
        assigned_tickets:
          type: array
          items:
            $ref: "#/components/schemas/SafAssignedTicket"
          readOnly: true
        parent_lot:
          allOf:
            - $ref: "#/components/schemas/SafParentLot"
          readOnly: true
        parent_ticket:
          $ref: "#/components/schemas/SafParentTicket"
        added_by:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
      required:
        - added_by
        - assigned_tickets
        - assigned_volume
        - biofuel
        - country_of_origin
        - created_at
        - delivery_period
        - feedstock
        - id
        - parent_lot
        - total_volume
        - year
    SeachCompanyRequest:
      type: object
      properties:
        registration_id:
          type: string
          minLength: 1
          maxLength: 9
      required:
        - registration_id
    SetBioFuelsRequest:
      type: object
      properties:
        biocarburant_codes:
          type: array
          items:
            type: string
            minLength: 1
          description: List of biocarburant codes.
      required:
        - biocarburant_codes
    SetCertificateRequest:
      type: object
      properties:
        certificate_ids:
          type: array
          items:
            type: string
            minLength: 1
      required:
        - certificate_ids
    SetDefaultCertificateRequest:
      type: object
      properties:
        certificate_id:
          type: string
          minLength: 1
      required:
        - certificate_id
    SetFeedstocksRequest:
      type: object
      properties:
        matiere_premiere_codes:
          type: array
          items:
            type: string
            minLength: 1
      required:
        - matiere_premiere_codes
    ShippingMethodEnum:
      enum:
        - PIPELINE
        - TRUCK
        - TRAIN
        - BARGE
      type: string
      description: |-
        * `PIPELINE` - PIPELINE
        * `TRUCK` - TRUCK
        * `TRAIN` - TRAIN
        * `BARGE` - BARGE
    SimulationInputRequest:
      type: object
      properties:
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        target_volume:
          type: number
          format: double
        target_emission:
          type: number
          format: double
        max_n_batches:
          type: integer
        enforced_volumes:
          type: array
          items:
            type: integer
        unit:
          type: string
          minLength: 1
        from_depot:
          type: integer
          nullable: true
        ges_bound_min:
          type: number
          format: double
        ges_bound_max:
          type: number
          format: double
      required:
        - biofuel
        - customs_category
        - debited_entity
        - target_emission
        - target_volume
    SimulationLotOutput:
      type: object
      properties:
        lot_id:
          type: integer
        volume:
          type: string
          format: decimal
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - emission_rate_per_mj
        - lot_id
        - volume
    SimulationMinMaxInputRequest:
      type: object
      properties:
        customs_category:
          $ref: "#/components/schemas/MPCategoriesEnum"
        biofuel:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        target_volume:
          type: number
          format: double
        unit:
          type: string
          minLength: 1
        from_depot:
          type: integer
          nullable: true
        ges_bound_min:
          type: number
          format: double
        ges_bound_max:
          type: number
          format: double
      required:
        - biofuel
        - customs_category
        - debited_entity
        - target_volume
    SimulationMinMaxOutput:
      type: object
      properties:
        min_avoided_emissions:
          type: number
          format: double
        max_avoided_emissions:
          type: number
          format: double
      required:
        - max_avoided_emissions
        - min_avoided_emissions
    SimulationOutput:
      type: object
      properties:
        selected_lots:
          type: array
          items:
            $ref: "#/components/schemas/SimulationLotOutput"
        fun:
          type: number
          format: double
      required:
        - fun
        - selected_lots
    SiteTypeEnum:
      enum:
        - OTHER
        - EFS
        - EFPE
        - OIL DEPOT
        - BIOFUEL DEPOT
        - HEAT PLANT
        - POWER PLANT
        - COGENERATION PLANT
        - PRODUCTION BIOLIQUID
        - EFCA
        - AIRPORT
      type: string
      description: |-
        * `OTHER` - Autre
        * `EFS` - EFS
        * `EFPE` - EFPE
        * `OIL DEPOT` - OIL DEPOT
        * `BIOFUEL DEPOT` - BIOFUEL DEPOT
        * `HEAT PLANT` - HEAT PLANT
        * `POWER PLANT` - POWER PLANT
        * `COGENERATION PLANT` - COGENERATION PLANT
        * `PRODUCTION BIOLIQUID` - PRODUCTION BIOLIQUID
        * `EFCA` - EFCA
        * `AIRPORT` - AIRPORT
    SourceEnum:
      enum:
        - MANUAL
        - METER_READINGS
        - QUALICHARGE
      type: string
      description: |-
        * `MANUAL` - MANUAL
        * `METER_READINGS` - METER_READINGS
        * `QUALICHARGE` - QUALICHARGE
    StationRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 7
          pattern: ^FR[A-Z]{3}P.*
        energy:
          type: number
          format: double
          minimum: 1
        is_controlled:
          type: boolean
      required:
        - energy
        - id
        - is_controlled
    StatsResponse:
      type: object
      properties:
        metabase_iframe_url:
          type: string
      required:
        - metabase_iframe_url
    ToggleElecRequest:
      type: object
      properties:
        has_elec:
          type: boolean
          default: false
    ToggleRFCRequest:
      type: object
      properties:
        has_mac:
          type: boolean
          default: false
    ToggleStocksRequest:
      type: object
      properties:
        has_stocks:
          type: boolean
          default: false
    ToggleTradingRequest:
      type: object
      properties:
        has_trading:
          type: boolean
          default: false
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
        - access
        - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - email
        - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
        - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - refresh
    TransportDocumentTypeEnum:
      enum:
        - DAU
        - DAE
        - DSA
        - DSAC
        - DSP
        - OTHER
      type: string
      description: |-
        * `DAU` - DAU
        * `DAE` - DAE
        * `DSA` - DSA
        * `DSAC` - DSAC
        * `DSP` - DSP
        * `OTHER` - OTHER
    UnitRequest:
      type: object
      properties:
        unit:
          allOf:
            - $ref: "#/components/schemas/PreferredUnitEnum"
          default: l
    UpdateCertificateRequest:
      type: object
      properties:
        old_certificate_id:
          type: string
          minLength: 1
        old_certificate_type:
          type: string
          minLength: 1
        new_certificate_id:
          type: string
          minLength: 1
        new_certificate_type:
          type: string
          minLength: 1
      required:
        - new_certificate_id
        - new_certificate_type
        - old_certificate_id
        - old_certificate_type
    UpdateEntityInfoRequest:
      type: object
      properties:
        activity_description:
          type: string
          maxLength: 5000
        legal_name:
          type: string
          maxLength: 128
        registered_address:
          type: string
        registered_city:
          type: string
        registered_country_code:
          type: string
          minLength: 1
        registered_zipcode:
          type: string
        registration_id:
          type: string
          maxLength: 64
        sustainability_officer:
          type: string
          maxLength: 256
        sustainability_officer_email:
          type: string
          format: email
        sustainability_officer_phone_number:
          type: string
          maxLength: 32
        vat_number:
          type: string
          maxLength: 32
        website:
          type: string
          format: uri
    UpdateProductionSiteModelRequest:
      type: object
      properties:
        country_code:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
          maxLength: 128
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        site_siret:
          type: string
          maxLength: 64
        postal_code:
          type: string
          maxLength: 32
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        city:
          type: string
          maxLength: 128
        address:
          type: string
          maxLength: 256
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        created_by:
          type: integer
          nullable: true
      required:
        - country_code
        - name
    UpdateRightsRequestsRequest:
      type: object
      properties:
        id:
          type: integer
        status:
          $ref: "#/components/schemas/UserRightsRequestsStatusEnum"
      required:
        - id
        - status
    UpdateUserRoleRequest:
      type: object
      properties:
        request_id:
          type: integer
        role:
          type: string
          minLength: 1
      required:
        - request_id
        - role
    UpdatedQuotasRequest:
      type: object
      properties:
        approved_quotas:
          type: array
          items:
            type: array
            items:
              type: integer
            maxItems: 2
            minItems: 2
      required:
        - approved_quotas
    UserCreation:
      type: object
      description: |-
        Serializer for creating new users. Includes required fields
        and repeated password validation.
      properties:
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 255
        name:
          type: string
          title: Nom
          maxLength: 255
      required:
        - email
        - name
    UserCreationRequest:
      type: object
      description: |-
        Serializer for creating new users. Includes required fields
        and repeated password validation.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Adresse électronique
          maxLength: 255
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 255
        password1:
          type: string
          writeOnly: true
          minLength: 1
          title: Mot de passe
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirmation du mot de passe
      required:
        - email
        - name
        - password1
        - password2
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        is_enabled:
          type: boolean
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
        has_mac:
          type: boolean
          readOnly: true
        has_trading:
          type: boolean
          readOnly: true
        has_direct_deliveries:
          type: boolean
          readOnly: true
        has_stocks:
          type: boolean
          readOnly: true
        legal_name:
          type: string
          readOnly: true
        registration_id:
          type: string
          readOnly: true
        sustainability_officer:
          type: string
          readOnly: true
        sustainability_officer_phone_number:
          type: string
          readOnly: true
        sustainability_officer_email:
          type: string
          readOnly: true
        registered_address:
          type: string
          readOnly: true
        registered_zipcode:
          type: string
          readOnly: true
        registered_city:
          type: string
          readOnly: true
        registered_country:
          $ref: "#/components/schemas/Country"
        default_certificate:
          type: string
          readOnly: true
          nullable: true
        preferred_unit:
          allOf:
            - $ref: "#/components/schemas/PreferredUnitEnum"
          readOnly: true
        has_saf:
          type: boolean
          readOnly: true
        has_elec:
          type: boolean
          readOnly: true
        activity_description:
          type: string
          readOnly: true
        website:
          type: string
          format: uri
          readOnly: true
        vat_number:
          type: string
          readOnly: true
        ext_admin_pages:
          type: array
          items:
            $ref: "#/components/schemas/ExtAdminPagesEnum"
          readOnly: true
        is_tiruert_liable:
          type: boolean
          readOnly: true
        accise_number:
          type: string
          readOnly: true
      required:
        - accise_number
        - activity_description
        - default_certificate
        - entity_type
        - ext_admin_pages
        - has_direct_deliveries
        - has_elec
        - has_mac
        - has_saf
        - has_stocks
        - has_trading
        - id
        - is_enabled
        - is_tiruert_liable
        - legal_name
        - name
        - preferred_unit
        - registered_address
        - registered_city
        - registered_zipcode
        - registration_id
        - sustainability_officer
        - sustainability_officer_email
        - sustainability_officer_phone_number
        - vat_number
        - website
    UserLoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - password
        - username
    UserResendActivationLinkRequest:
      type: object
      description: A serializer for re-sending the user activation email. Includes
        email field only.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
      required:
        - email
    UserRights:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        entity:
          $ref: "#/components/schemas/UserEntity"
        role:
          $ref: "#/components/schemas/RoleEnum"
        expiration_date:
          type: string
          format: date-time
          nullable: true
      required:
        - email
        - entity
        - name
    UserRightsRequests:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: array
          items:
            type: string
          readOnly: true
        entity:
          $ref: "#/components/schemas/UserEntity"
        date_requested:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: "#/components/schemas/UserRightsRequestsStatusEnum"
          readOnly: true
        comment:
          type: string
          nullable: true
        role:
          allOf:
            - $ref: "#/components/schemas/RoleEnum"
          readOnly: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
      required:
        - date_requested
        - entity
        - id
        - role
        - status
        - user
    UserRightsRequestsStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - REVOKED
      type: string
      description: |-
        * `PENDING` - En attente de validation
        * `ACCEPTED` - Accepté
        * `REJECTED` - Refusé
        * `REVOKED` - Révoqué
      x-enum-varnames:
        - Pending
        - Accepted
        - Rejected
        - Revoked
    UserRightsResponse:
      type: object
      properties:
        rights:
          type: array
          items:
            $ref: "#/components/schemas/UserRights"
        requests:
          type: array
          items:
            $ref: "#/components/schemas/UserRightsRequests"
      required:
        - requests
        - rights
    UserSettingsResponse:
      type: object
      properties:
        email:
          type: string
          format: email
        rights:
          type: array
          items:
            $ref: "#/components/schemas/UserRights"
        requests:
          type: array
          items:
            $ref: "#/components/schemas/UserRightsRequests"
      required:
        - email
        - requests
        - rights
    ValidatedByEnum:
      enum:
        - NO_ONE
        - DGEC
        - CPO
        - BOTH
      type: string
      description: |-
        * `NO_ONE` - NO_ONE
        * `DGEC` - DGEC
        * `CPO` - CPO
        * `BOTH` - BOTH
    VerifyOTPRequest:
      type: object
      description: A serializer for submitting the OTP sent via email. Includes
        otp_token field only.
      properties:
        otp_token:
          type: string
          minLength: 6
          title: Entrez le code à 6 chiffres reçu par email
          pattern: ^\d{6}$
          maxLength: 6
      required:
        - otp_token
    Warning:
      type: object
      properties:
        code:
          type: string
          maxLength: 50
        meta:
          type: object
          additionalProperties: {}
      required:
        - code
        - meta
    saf.filters.TicketFilter.status:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
      type: string
      description: |-
        * `PENDING` - En attente
        * `ACCEPTED` - Accepté
        * `REJECTED` - Refusé
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

openapi: 3.0.3
info:
  title: Carbure API
  version: 1.0.0
  description: Carbure
paths:
  /api/auth/activate/:
    post:
      operationId: auth_activate_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ActivateAccountRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivateResponse"
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: A successful activation
                  description: The account was successfully activated.
          description: ""
        "400":
          content:
            application/json:
              schema:
                message: Could not activate user account
              examples:
                BadRequest:
                  value:
                    message: Could not activate user account
                  summary: Activation failed
          description: Bad request - missing fields.
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                SuccessExample:
                  value:
                    status: success
                  summary: A successful activation
                  description: The account was successfully activated.
          description: Request successful.
        "400":
          content:
            application/json:
              schema:
                message: Invalid login or password | Account not activated
              examples:
                BadRequest:
                  value:
                    message: Invalid login or password | Account not activated
                  summary: login failed
          description: Bad request - missing fields.
  /api/auth/logout/:
    get:
      operationId: auth_logout_retrieve
      tags:
        - auth
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                status: success
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: Request successful.
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/request-activation-link/:
    post:
      operationId: auth_request_activation_link_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserResendActivationLinkRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/request-otp/:
    get:
      operationId: auth_request_otp_retrieve
      tags:
        - auth
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtpResponse"
              examples:
                ExampleResponse.:
                  value:
                    valid_until: 07/03/2024, 14:09
                  summary: Example response.
          description: ""
  /api/auth/request-password-reset/:
    post:
      operationId: auth_request_password_reset_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RequestPasswordResetRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/reset-password/:
    post:
      operationId: auth_reset_password_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/auth/verify-otp/:
    post:
      operationId: auth_verify_otp_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/VerifyOTPRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreation"
              examples:
                ExampleResponse.:
                  value:
                    status: success
                  summary: Example response.
          description: ""
  /api/double-counting/agreements/:
    get:
      operationId: double_counting_agreements_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -production_site
                - -valid_until
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DoubleCountingApplicationPartial"
          description: ""
  /api/double-counting/agreements/{id}/:
    get:
      operationId: double_counting_agreements_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Certificat Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoubleCountingRegistrationDetails"
          description: ""
  /api/double-counting/agreements/agreement-admin/:
    get:
      operationId: double_counting_agreements_agreement_admin_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -production_site
                - -valid_until
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementLists"
          description: ""
  /api/double-counting/agreements/agreement-public/:
    get:
      operationId: double_counting_agreements_agreement_public_list
      parameters:
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -production_site
                - -valid_until
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DoubleCountingRegistrationPublic"
          description: ""
  /api/double-counting/agreements/export/:
    get:
      operationId: double_counting_agreements_export_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: order_by
          schema:
            type: array
            items:
              type: string
              enum:
                - -production_site
                - -valid_until
                - production_site
                - valid_until
          description: |-
            Ordre

            * `production_site` - Production site
            * `-production_site` - Production site (décroissant)
            * `valid_until` - Valid until
            * `-valid_until` - Valid until (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/double-counting/applications/{id}/:
    get:
      operationId: double_counting_applications_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoubleCountingApplication"
          description: ""
  /api/double-counting/applications/{id}/export/:
    get:
      operationId: double_counting_applications_export_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/force-download:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.*
                  summary: Example of export response.
          description: ""
  /api/double-counting/applications/{id}/update-approved-quotas/:
    post:
      operationId: double_counting_applications_update_approved_quotas_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Dossier Double Compte.
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatedQuotasRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/add/:
    post:
      operationId: double_counting_applications_add_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DoubleCountingAdminAddRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/approve/:
    post:
      operationId: double_counting_applications_approve_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApprouveDoubleCountingRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ApprouveDoubleCountingRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ApprouveDoubleCountingRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/applications/check-admin-files/:
    post:
      operationId: double_counting_applications_check_admin_files_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckAdminFileRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CheckAdminFileRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CheckAdminFileRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CheckFileResponse"
          description: ""
  /api/double-counting/applications/check-file/:
    post:
      operationId: double_counting_applications_check_file_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckFileResponse"
          description: ""
  /api/double-counting/applications/export-application/:
    get:
      operationId: double_counting_applications_export_application_retrieve
      parameters:
        - in: query
          name: dca_id
          schema:
            type: integer
          description: Doublecount application ID
          required: true
        - in: query
          name: di
          schema:
            type: string
          description: Dechet industriel
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: file.docx
                  summary: Example of export response.
          description: ""
  /api/double-counting/applications/list-admin/:
    get:
      operationId: double_counting_applications_list_admin_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationListe"
          description: ""
  /api/double-counting/applications/reject/:
    post:
      operationId: double_counting_applications_reject_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RejectDoubleCountingRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/double-counting/snapshot/:
    get:
      operationId: double_counting_snapshot_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - double-counting
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSnapshot"
          description: ""
  /api/entities/{id}/enable/:
    post:
      operationId: entities_enable_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: The id of the admin entity enabling the company
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Entity.
          required: true
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EmptyResponseRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: ""
  /api/nav-stats:
    get:
      operationId: nav_stats_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - nav-stats
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NavStats"
          description: ""
  /api/resources/biofuels:
    get:
      operationId: resources_biofuels_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en`, and `code`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Biofuel"
          description: ""
  /api/resources/certificates:
    get:
      operationId: resources_certificates_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `certificate_id` and `certificate_holder`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GenericCertificate"
          description: ""
  /api/resources/countries:
    get:
      operationId: resources_countries_list
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code_pays`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
          description: ""
  /api/resources/depots:
    get:
      operationId: resources_depots_list
      parameters:
        - in: query
          name: public_only
          schema:
            type: boolean
          description: Public Only
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code_pays`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Depot"
          description: ""
  /api/resources/entities:
    get:
      operationId: resources_entities_list
      parameters:
        - in: query
          name: entity_type
          schema:
            type: array
            items:
              type: string
          description: Only keep specific entity types
        - in: query
          name: is_enabled
          schema:
            type: boolean
          description: Only show enabled entities
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `name`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityPreview"
          description: ""
  /api/resources/feedstocks:
    get:
      operationId: resources_feedstocks_list
      parameters:
        - in: query
          name: double_count_only
          schema:
            type: boolean
          description: Double compte only
        - in: query
          name: query
          schema:
            type: string
          description: Search within the fields `name`, `name_en` and `code`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedStock"
          description: ""
  /api/resources/production-sites:
    get:
      operationId: resources_production_sites_list
      parameters:
        - in: query
          name: producer_id
          schema:
            type: integer
          description: Search within the field `producer_id`
        - in: query
          name: query
          schema:
            type: string
          description: Search within the field `name`
      tags:
        - resources
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductionSite"
          description: ""
  /api/saf/clients/:
    get:
      operationId: saf_clients_list
      parameters:
        - in: query
          name: entity_id
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEntityPreviewList"
          description: ""
  /api/saf/clients/{id}/:
    get:
      operationId: saf_clients_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Entity.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityPreview"
          description: ""
  /api/saf/snapshot/:
    get:
      operationId: saf_snapshot_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: query
          name: year
          schema:
            type: integer
          description: Year
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - type: object
                    properties:
                      tickets_pending:
                        type: integer
                      tickets_accepted:
                        type: integer
                    required:
                      - tickets_pending
                      - tickets_accepted
                  - type: object
                    properties:
                      ticket_sources_available:
                        type: integer
                      ticket_sources_history:
                        type: integer
                      tickets_assigned:
                        type: integer
                      tickets_assigned_pending:
                        type: integer
                      tickets_assigned_accepted:
                        type: integer
                      tickets_assigned_rejected:
                        type: integer
                      tickets_received:
                        type: integer
                      tickets_received_pending:
                        type: integer
                      tickets_received_accepted:
                        type: integer
                    required:
                      - ticket_sources_available
                      - ticket_sources_history
                      - tickets_assigned
                      - tickets_assigned_pending
                      - tickets_assigned_accepted
                      - tickets_assigned_rejected
                      - tickets_received
                      - tickets_received_pending
                      - tickets_received_accepted
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    tickets_pending: 5
                    tickets_accepted: 10
                    ...: ...
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/ticket-sources/:
    get:
      operationId: saf_ticket_sources_list
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: delivery_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: Comma-separated list of supplier names
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSafTicketSourceList"
          description: ""
  /api/saf/ticket-sources/{id}/:
    get:
      operationId: saf_ticket_sources_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Tickets source SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicketSourceDetails"
          description: ""
  /api/saf/ticket-sources/{id}/assign/:
    post:
      operationId: saf_ticket_sources_assign_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Tickets source SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SafTicketSourceAssignmentRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicketSourceAssignment"
              examples:
                ExampleOfAssignResponse.:
                  value: {}
                  summary: Example of assign response.
          description: ""
  /api/saf/ticket-sources/export/:
    get:
      operationId: saf_ticket_sources_export_retrieve
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: delivery_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: Comma-separated list of supplier names
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/saf/ticket-sources/filters/:
    get:
      operationId: saf_ticket_sources_filters_retrieve
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: delivery_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -feedstock
                - -ghg_reduction
                - -period
                - -volume
                - feedstock
                - ghg_reduction
                - period
                - volume
          description: |-
            Ordre

            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - AVAILABLE
              - HISTORY
          description: |-
            * `HISTORY` - HISTORY
            * `AVAILABLE` - AVAILABLE
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
              minLength: 1
          description: Comma-separated list of supplier names
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/saf/ticket-sources/group-assign/:
    post:
      operationId: saf_ticket_sources_group_assign_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SafTicketSourceGroupAssignmentRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAssignmentResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/:
    get:
      operationId: saf_tickets_list
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -suppliers
                - -volume
                - client
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - suppliers
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `suppliers` - Suppliers
            * `-suppliers` - Suppliers (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSafTicketList"
          description: ""
  /api/saf/tickets/{id}/:
    get:
      operationId: saf_tickets_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicketDetails"
          description: ""
  /api/saf/tickets/{id}/accept/:
    post:
      operationId: saf_tickets_accept_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/{id}/cancel/:
    post:
      operationId: saf_tickets_cancel_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/{id}/credit-source/:
    get:
      operationId: saf_tickets_credit_source_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafTicket"
              examples:
                ExampleOfCreditResponse.:
                  value:
                    status: success
                  summary: Example of credit response.
          description: ""
  /api/saf/tickets/{id}/reject/:
    post:
      operationId: saf_tickets_reject_create
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Ticket SAF.
          required: true
      tags:
        - saf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/saf/tickets/export/:
    get:
      operationId: saf_tickets_export_retrieve
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -suppliers
                - -volume
                - client
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - suppliers
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `suppliers` - Suppliers
            * `-suppliers` - Suppliers (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                type: string
              examples:
                ExampleOfExportResponse.:
                  value: csv file.csv
                  summary: Example of export response.
          description: ""
  /api/saf/tickets/filters/:
    get:
      operationId: saf_tickets_filters_retrieve
      parameters:
        - in: query
          name: clients
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: countries_of_origin
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: entity_id
          schema:
            type: number
          required: true
        - in: query
          name: feedstocks
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: filter
          schema:
            type: string
          description: Filter string to apply
        - in: query
          name: order
          schema:
            type: array
            items:
              type: string
              enum:
                - -client
                - -created_at
                - -feedstock
                - -ghg_reduction
                - -period
                - -suppliers
                - -volume
                - client
                - created_at
                - feedstock
                - ghg_reduction
                - period
                - suppliers
                - volume
          description: |-
            Ordre

            * `client` - Client
            * `-client` - Client (décroissant)
            * `volume` - Volume
            * `-volume` - Volume (décroissant)
            * `period` - Period
            * `-period` - Period (décroissant)
            * `feedstock` - Feedstock
            * `-feedstock` - Feedstock (décroissant)
            * `ghg_reduction` - Ghg reduction
            * `-ghg_reduction` - Ghg reduction (décroissant)
            * `created_at` - Created at
            * `-created_at` - Created at (décroissant)
            * `suppliers` - Suppliers
            * `-suppliers` - Suppliers (décroissant)
          explode: false
          style: form
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: periods
          schema:
            type: array
            items:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: production_sites
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACCEPTED
              - PENDING
              - REJECTED
          description: |-
            * `PENDING` - En attente
            * `ACCEPTED` - Accepté
            * `REJECTED` - Refusé
        - in: query
          name: suppliers
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: year
          schema:
            type: integer
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/saf/years/:
    get:
      operationId: saf_years_retrieve
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Entity ID
          required: true
      tags:
        - saf
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - "2020"
                    - "2021"
                    - "2022"
                    - "2023"
                    - "2024"
                  summary: Example of filters response.
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: ""
  /api/tiruert/operations/:
    get:
      operationId: list_operations
      description: Retrieve a list of operations with optional filtering and pagination.
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - AM
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: details
          schema:
            type: boolean
            default: "0"
          description: Include detailed information if set to `1`.
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: sector
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - PENDING
                - REJECTED
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CESSION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - l
              - mj
            default: l
          description: Specify the volume unit (default is `l`).
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOperationOutputList"
          description: A list of operations.
    post:
      operationId: create_operation
      description: Create a new operation.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: string
          description: Authorised entity ID.
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
            examples:
              CreateOperationExample:
                value:
                  type: TENEUR
                  customs_category: CONV
                  biofuel: 33
                  credited_entity: ""
                  debited_entity: 2
                  depot: ""
                  validity_date: 2025-01-03
                  lots:
                    - id: 10
                      volume: 39462
                      emission_rate_per_mj: 5.25
                    - id: 11
                      volume: 723.2
                      emission_rate_per_mj: 30.2
                summary: Create Operation Example
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
              examples:
                CreateOperationExample:
                  value:
                    type: TENEUR
                    customs_category: CONV
                    biofuel: 33
                    credited_entity: ""
                    debited_entity: 2
                    depot: ""
                    validity_date: 2025-01-03
                    lots:
                      - id: 10
                        volume: 39462
                        emission_rate_per_mj: 5.25
                      - id: 11
                        volume: 723.2
                        emission_rate_per_mj: 30.2
                  summary: Create Operation Example
          description: The newly created operation.
        "400":
          description: Invalid input data.
  /api/tiruert/operations/{id}/:
    get:
      operationId: tiruert_operations_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
    put:
      operationId: tiruert_operations_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
    patch:
      operationId: tiruert_operations_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedOperationOutputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedOperationOutputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedOperationOutputRequest"
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
    delete:
      operationId: delete_operation
      description: Delete an operation. Only allowed for certain types and statuses.
      parameters:
        - in: query
          name: entity_id
          schema:
            type: string
          description: Authorised entity ID.
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "204":
          description: Operation deleted successfully.
        "403":
          description: Forbidden. The operation type or status does not allow deletion.
  /api/tiruert/operations/{id}/accept/:
    post:
      operationId: tiruert_operations_accept_create
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
  /api/tiruert/operations/{id}/reject/:
    post:
      operationId: tiruert_operations_reject_create
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this Opération.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
  /api/tiruert/operations/balance/:
    get:
      operationId: list_balances
      description: Retrieve balances grouped by mp category / biofuel or by sector
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - AM
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: group_by
          schema:
            type: string
            enum:
              - lot
              - sector
            default: ""
          description: Group by sector or by lot.
        - in: query
          name: sector
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - PENDING
                - REJECTED
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CESSION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - l
              - mj
            default: l
          description: Specify the volume unit (default is `l`).
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Balance"
          description: Balances by sector or by lot.
  /api/tiruert/operations/filters/:
    get:
      operationId: filter_operations
      description: Retrieve content of a specific filter
      parameters:
        - in: query
          name: biofuel
          schema:
            type: array
            items:
              type: string
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: customs_category
          schema:
            type: array
            items:
              type: string
              enum:
                - AM
                - ANN-IX-A
                - ANN-IX-B
                - CONV
                - EP2AM
                - OTHER
                - TALLOL
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - biofuels
              - categories
              - depots
              - entities
              - operations
              - sectors
              - statuses
          description: Filter string to apply
          required: true
        - in: query
          name: from_to
          schema:
            type: string
        - in: query
          name: sector
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - CANCELED
                - PENDING
                - REJECTED
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              enum:
                - CESSION
                - DEVALUATION
                - EXPORTATION
                - INCORPORATION
                - LIVRAISON_DIRECTE
                - MAC_BIO
                - TENEUR
          description: Les valeurs multiples doivent être séparées par des virgules.
          explode: false
          style: form
      tags:
        - tiruert
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ExampleOfFiltersResponse.:
                  value:
                    - SHELL France
                    - CIM SNC
                    - ESSO SAF
                    - TMF
                    - TERF SAF
                  summary: Example of filters response.
          description: ""
  /api/tiruert/operations/simulate/:
    post:
      operationId: simulate
      description: Simulate a blending operation
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationOutput"
          description: ""
  /api/tiruert/operations/simulate/min_max/:
    post:
      operationId: simulation_bounds
      description: Get bounds for blending operation
      parameters:
        - in: query
          name: entity_id
          schema:
            type: integer
          description: Authorised entity ID.
          required: true
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SimulationInputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationOutput"
          description: ""
  /api/tiruert/operations/teneur/validate/:
    post:
      operationId: tiruert_operations_teneur_validate_create
      tags:
        - tiruert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OperationOutputRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutput"
          description: ""
  /api/user/:
    get:
      operationId: user_retrieve
      tags:
        - user
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsResponseSeriaizer"
          description: ""
  /api/user/request-access:
    post:
      operationId: user_request_access_create
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RequestAccessRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
  /api/user/revoke-access:
    post:
      operationId: user_revoke_access_create
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RevokeAccessRequest"
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"
              examples:
                ExampleOfResponse.:
                  value:
                    status: success
                  summary: Example of response.
          description: ""
components:
  schemas:
    ActivateAccountRequest:
      type: object
      properties:
        uidb64:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        invite:
          type: integer
      required:
        - token
        - uidb64
    ActivateResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
      required:
        - message
    AgreementLists:
      type: object
      properties:
        active:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
        incoming:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
        expired:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingRegistration"
      required:
        - active
        - expired
        - incoming
    ApplicationListe:
      type: object
      properties:
        rejected:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingApplicationPartial"
        pending:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingApplicationPartial"
      required:
        - pending
        - rejected
    ApplicationSnapshot:
      type: object
      properties:
        applications_pending:
          type: integer
        applications_rejected:
          type: integer
        agreements_incoming:
          type: integer
        agreements_active:
          type: integer
        agreements_expired:
          type: integer
      required:
        - agreements_active
        - agreements_expired
        - agreements_incoming
        - applications_pending
        - applications_rejected
    ApprouveDoubleCountingRequest:
      type: object
      properties:
        dca_id:
          type: integer
      required:
        - dca_id
    Balance:
      type: object
      properties:
        sector:
          type: string
        customs_category:
          type: string
          nullable: true
        biofuel:
          type: string
          nullable: true
        initial_balance:
          type: number
          format: double
        available_balance:
          type: string
          readOnly: true
        final_balance:
          type: string
          readOnly: true
        volume:
          type: object
          additionalProperties:
            type: number
            format: double
        teneur:
          type: number
          format: double
        yearly_teneur:
          type: number
          format: double
        pending:
          type: integer
        unit:
          type: string
      required:
        - available_balance
        - final_balance
        - pending
        - sector
        - volume
    Biofuel:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        name_en:
          type: string
          maxLength: 64
        code:
          type: string
          maxLength: 16
      required:
        - code
        - name
        - name_en
    CarbureLotPublic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        carbure_id:
          type: string
          maxLength: 64
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        production_site_certificate:
          type: string
          nullable: true
          maxLength: 64
        production_site_double_counting_certificate:
          type: string
          nullable: true
          maxLength: 64
        carbure_supplier:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_supplier:
          type: string
          nullable: true
          maxLength: 64
        supplier_certificate:
          type: string
          nullable: true
          maxLength: 64
        supplier_certificate_type:
          type: string
          nullable: true
          maxLength: 64
        transport_document_type:
          $ref: "#/components/schemas/TransportDocumentTypeEnum"
        transport_document_reference:
          type: string
          nullable: true
          maxLength: 128
        carbure_client:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        unknown_client:
          type: string
          nullable: true
          maxLength: 64
        dispatch_date:
          type: string
          format: date
          nullable: true
        carbure_dispatch_site:
          allOf:
            - $ref: "#/components/schemas/Depot"
          readOnly: true
        unknown_dispatch_site:
          type: string
          nullable: true
          maxLength: 64
        dispatch_site_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        delivery_date:
          type: string
          format: date
          nullable: true
        carbure_delivery_site:
          allOf:
            - $ref: "#/components/schemas/Depot"
          readOnly: true
        unknown_delivery_site:
          type: string
          nullable: true
          maxLength: 64
        delivery_site_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        delivery_type:
          $ref: "#/components/schemas/DeliveryTypeEnum"
        lot_status:
          $ref: "#/components/schemas/LotStatusEnum"
        correction_status:
          $ref: "#/components/schemas/CorrectionStatusEnum"
        volume:
          type: number
          format: double
        weight:
          type: number
          format: double
        lhv_amount:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
        ghg_reference:
          type: number
          format: double
        ghg_reduction:
          type: number
          format: double
        ghg_reference_red_ii:
          type: number
          format: double
        ghg_reduction_red_ii:
          type: number
          format: double
        free_field:
          type: string
          nullable: true
        added_by:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        carbure_vendor:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        vendor_certificate:
          type: string
          nullable: true
          maxLength: 64
        vendor_certificate_type:
          type: string
          nullable: true
          maxLength: 64
        data_reliability_score:
          type: string
          maxLength: 1
      required:
        - added_by
        - biofuel
        - carbure_client
        - carbure_delivery_site
        - carbure_dispatch_site
        - carbure_producer
        - carbure_production_site
        - carbure_supplier
        - carbure_vendor
        - country_of_origin
        - created_at
        - delivery_site_country
        - dispatch_site_country
        - feedstock
        - id
        - period
        - production_country
        - year
    CategoryEnum:
      enum:
        - CONV
        - ANN-IX-A
        - ANN-IX-B
        - TALLOL
        - OTHER
        - EP2AM
        - AM
      type: string
      description: |-
        * `CONV` - Conventionnel
        * `ANN-IX-A` - ANNEXE IX-A
        * `ANN-IX-B` - ANNEXE IX-B
        * `TALLOL` - Tallol
        * `OTHER` - Autre
        * `EP2AM` - EP2AM
        * `AM` - AM
    CertificateTypeEnum:
      enum:
        - SYSTEME_NATIONAL
        - ISCC
        - REDCERT
        - 2BS
      type: string
      description: |-
        * `SYSTEME_NATIONAL` - SYSTEME_NATIONAL
        * `ISCC` - ISCC
        * `REDCERT` - REDCERT
        * `2BS` - 2BS
    CheckAdminFileRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
      required:
        - files
    CheckFileResponse:
      type: object
      properties:
        file:
          $ref: "#/components/schemas/File"
        checked_at:
          type: string
          format: date-time
      required:
        - checked_at
        - file
    CommentRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
    CorrectionStatusEnum:
      enum:
        - NO_PROBLEMO
        - IN_CORRECTION
        - FIXED
      type: string
      description: |-
        * `NO_PROBLEMO` - NO_PROBLEMO
        * `IN_CORRECTION` - IN_CORRECTION
        * `FIXED` - FIXED
    Country:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code_pays:
          type: string
          maxLength: 64
        is_in_europe:
          type: boolean
      required:
        - code_pays
        - name
        - name_en
    CustomsCategoryEnum:
      enum:
        - CONV
        - ANN-IX-A
        - ANN-IX-B
        - TALLOL
        - OTHER
        - EP2AM
        - AM
      type: string
      description: |-
        * `CONV` - Conventionnel
        * `ANN-IX-A` - ANNEXE IX-A
        * `ANN-IX-B` - ANNEXE IX-B
        * `TALLOL` - Tallol
        * `OTHER` - Autre
        * `EP2AM` - EP2AM
        * `AM` - AM
    DeliveryTypeEnum:
      enum:
        - UNKNOWN
        - RFC
        - STOCK
        - BLENDING
        - EXPORT
        - TRADING
        - PROCESSING
        - DIRECT
        - FLUSHED
        - CONSUMPTION
      type: string
      description: |-
        * `UNKNOWN` - UNKNOWN
        * `RFC` - RFC
        * `STOCK` - STOCK
        * `BLENDING` - BLENDING
        * `EXPORT` - EXPORT
        * `TRADING` - TRADING
        * `PROCESSING` - PROCESSING
        * `DIRECT` - DIRECT
        * `FLUSHED` - FLUSHED
        * `CONSUMPTION` - CONSUMPTION
    Depot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 128
        customs_id:
          type: string
          maxLength: 32
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        site_type:
          $ref: "#/components/schemas/SiteTypeEnum"
        address:
          type: string
          maxLength: 256
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        accise:
          type: string
          maxLength: 32
        electrical_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        thermal_efficiency:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: Entre 0 et 1
        useful_temperature:
          type: number
          format: double
          nullable: true
          description: En degrés Celsius
      required:
        - country
        - id
        - name
    DepotRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
      required:
        - id
        - name
    DoubleCountingAdminAddRequest:
      type: object
      properties:
        certificate_id:
          type: string
        entity_id:
          type: integer
        producer_id:
          type: integer
        production_site_id:
          type: integer
        should_replace:
          type: boolean
          default: false
        file:
          type: string
          format: binary
      required:
        - entity_id
        - file
        - producer_id
        - production_site_id
    DoubleCountingAgreementStatus:
      enum:
        - ACTIVE
        - EXPIRED
        - EXPIRES_SOON
        - INCOMING
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `EXPIRED` - EXPIRED
        * `EXPIRES_SOON` - EXPIRES_SOON
        * `INCOMING` - INCOMING
    DoubleCountingApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        producer_user:
          type: string
          format: email
          title: Adresse électronique
          readOnly: true
        production_site:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingProductionSite"
          readOnly: true
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        status:
          $ref: "#/components/schemas/DoubleCountingStatus"
        sourcing:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcing"
          readOnly: true
        production:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProduction"
          readOnly: true
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingDocFile"
          readOnly: true
      required:
        - created_at
        - documents
        - id
        - period_end
        - period_start
        - producer
        - producer_user
        - production
        - production_site
        - sourcing
    DoubleCountingApplicationPartial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        production_site:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingProductionSite"
          readOnly: true
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingStatus"
          readOnly: true
        certificate_id:
          type: string
          maxLength: 16
        agreement_id:
          type: integer
          readOnly: true
        quotas_progression:
          type: number
          format: double
          readOnly: true
        producer_user:
          type: string
          format: email
          title: Adresse électronique
          readOnly: true
      required:
        - agreement_id
        - certificate_id
        - created_at
        - id
        - period_end
        - period_start
        - producer
        - producer_user
        - production_site
        - quotas_progression
        - status
    DoubleCountingDocFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file_name:
          type: string
          maxLength: 128
        file_type:
          $ref: "#/components/schemas/FileTypeEnum"
      required:
        - id
    DoubleCountingProduction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        max_production_capacity:
          type: integer
          readOnly: true
        estimated_production:
          type: integer
          readOnly: true
        requested_quota:
          type: integer
          readOnly: true
        approved_quota:
          type: integer
          readOnly: true
      required:
        - approved_quota
        - biofuel
        - estimated_production
        - feedstock
        - id
        - max_production_capacity
        - requested_quota
        - year
    DoubleCountingProductionHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        max_production_capacity:
          type: integer
          readOnly: true
        effective_production:
          type: integer
          readOnly: true
      required:
        - biofuel
        - effective_production
        - feedstock
        - id
        - max_production_capacity
        - year
    DoubleCountingProductionSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        name:
          type: string
          maxLength: 128
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        site_siret:
          type: string
          maxLength: 64
        address:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 128
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/FeedStock"
          readOnly: true
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/Biofuel"
          readOnly: true
        certificates:
          type: array
          items:
            $ref: "#/components/schemas/ProductionSiteCertificate"
          readOnly: true
      required:
        - certificates
        - country
        - id
        - inputs
        - name
        - outputs
        - producer
    DoubleCountingQuota:
      type: object
      properties:
        approved_quota:
          type: integer
        biofuel:
          $ref: "#/components/schemas/Biofuel"
        feedstock:
          $ref: "#/components/schemas/FeedStock"
        id:
          type: integer
        lot_count:
          type: integer
        production_tonnes:
          type: integer
        quotas_progression:
          type: integer
        requested_quota:
          type: integer
        year:
          type: integer
      required:
        - approved_quota
        - biofuel
        - feedstock
        - id
        - lot_count
        - production_tonnes
        - quotas_progression
        - requested_quota
        - year
    DoubleCountingRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        producer:
          allOf:
            - $ref: "#/components/schemas/EntitySummary"
          readOnly: true
        production_site:
          $ref: "#/components/schemas/DoubleCountingProductionSite"
        valid_until:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingAgreementStatus"
          readOnly: true
        quotas_progression:
          type: number
          format: double
          readOnly: true
      required:
        - certificate_id
        - id
        - producer
        - production_site
        - quotas_progression
        - status
        - valid_from
        - valid_until
    DoubleCountingRegistrationDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        status:
          allOf:
            - $ref: "#/components/schemas/DoubleCountingAgreementStatus"
          readOnly: true
        producer:
          type: string
          readOnly: true
        production_site:
          type: string
          readOnly: true
        application:
          $ref: "#/components/schemas/DoubleCountingApplication"
        quotas:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingQuota"
          readOnly: true
      required:
        - application
        - certificate_id
        - id
        - producer
        - production_site
        - quotas
        - status
        - valid_from
        - valid_until
    DoubleCountingRegistrationPublic:
      type: object
      properties:
        production_site:
          allOf:
            - $ref: "#/components/schemas/FieldData"
          readOnly: true
        certificate_id:
          type: string
          maxLength: 64
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        biofuel_list:
          type: string
          readOnly: true
      required:
        - biofuel_list
        - certificate_id
        - production_site
        - valid_from
        - valid_until
    DoubleCountingSourcing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          readOnly: true
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        origin_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        supply_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        transit_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        metric_tonnes:
          type: integer
          readOnly: true
      required:
        - feedstock
        - id
        - metric_tonnes
        - origin_country
        - supply_country
        - transit_country
        - year
    DoubleCountingSourcingHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        origin_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        supply_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        transit_country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        metric_tonnes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        raw_material_supplier:
          type: string
          maxLength: 128
        supplier_certificate_name:
          type: string
          maxLength: 64
        supplier_certificate:
          type: integer
          nullable: true
      required:
        - feedstock
        - id
        - metric_tonnes
        - origin_country
        - supply_country
        - transit_country
        - year
    DoubleCountingStatus:
      enum:
        - PENDING
        - INPROGRESS
        - REJECTED
        - ACCEPTED
      type: string
      description: |-
        * `PENDING` - PENDING
        * `INPROGRESS` - INPROGRESS
        * `REJECTED` - REJECTED
        * `ACCEPTED` - ACCEPTED
    EmptyResponse:
      type: object
      properties:
        empty:
          type: string
    EmptyResponseRequest:
      type: object
      properties:
        empty:
          type: string
          minLength: 1
    Entity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        entity_type:
          $ref: "#/components/schemas/EntityTypeEnum"
        has_mac:
          type: boolean
        has_trading:
          type: boolean
        has_direct_deliveries:
          type: boolean
        has_stocks:
          type: boolean
        preferred_unit:
          $ref: "#/components/schemas/PreferredUnitEnum"
        legal_name:
          type: string
          maxLength: 128
        registration_id:
          type: string
          maxLength: 64
        sustainability_officer_phone_number:
          type: string
          maxLength: 32
        sustainability_officer:
          type: string
          maxLength: 256
        registered_address:
          type: string
          maxLength: 256
        registered_zipcode:
          type: string
          maxLength: 64
        registered_city:
          type: string
          maxLength: 64
        registered_country:
          type: integer
          nullable: true
        activity_description:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
        vat_number:
          type: string
          maxLength: 32
      required:
        - id
        - name
    EntityPreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
      required:
        - entity_type
        - id
        - name
    EntityRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
      required:
        - id
        - name
    EntitySummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
      required:
        - entity_type
        - id
        - name
    EntityTypeEnum:
      enum:
        - Producteur
        - Opérateur
        - Administration
        - Trader
        - Auditor
        - Administration Externe
        - Charge Point Operator
        - Compagnie aérienne
        - Unknown
        - Power or Heat Producer
      type: string
      description: |-
        * `Producteur` - Producteur
        * `Opérateur` - Opérateur
        * `Administration` - Administration
        * `Trader` - Trader
        * `Auditor` - Auditeur
        * `Administration Externe` - Administration Externe
        * `Charge Point Operator` - Charge Point Operator
        * `Compagnie aérienne` - Compagnie aérienne
        * `Unknown` - Unknown
        * `Power or Heat Producer` - Producteur d'électricité ou de chaleur
      x-enum-varnames:
        - Producer
        - Operator
        - Administration
        - Trader
        - Auditor
        - ExternalAdmin
        - CPO
        - Airline
        - Unknown
        - PowerOrHeatProducer
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    ExtAdminPagesEnum:
      enum:
        - DCA
        - AGRIMER
        - TIRIB
        - AIRLINE
        - ELEC
      type: string
      description: |-
        * `DCA` - DCA
        * `AGRIMER` - AGRIMER
        * `TIRIB` - TIRIB
        * `AIRLINE` - AIRLINE
        * `ELEC` - ELEC
    FeedStock:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        name_en:
          type: string
          maxLength: 128
        code:
          type: string
          maxLength: 64
        category:
          $ref: "#/components/schemas/CategoryEnum"
        is_double_compte:
          type: boolean
      required:
        - code
        - name
        - name_en
    FieldData:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        address:
          type: string
        postal_code:
          type: string
        country:
          type: string
      required:
        - address
        - city
        - country
        - name
        - postal_code
    File:
      type: object
      properties:
        file_name:
          type: string
        errors:
          $ref: "#/components/schemas/FileErrors"
        error_count:
          type: integer
        start_year:
          type: integer
        production_site:
          type: string
        producer_email:
          type: string
          format: email
        production:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProduction"
        sourcing:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcing"
        sourcing_history:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingSourcingHistory"
        production_history:
          type: array
          items:
            $ref: "#/components/schemas/DoubleCountingProductionHistory"
        has_dechets_industriels:
          type: boolean
          readOnly: true
      required:
        - error_count
        - errors
        - file_name
        - has_dechets_industriels
        - producer_email
        - production
        - production_history
        - production_site
        - sourcing
        - sourcing_history
        - start_year
    FileError:
      type: object
      properties:
        error:
          type: string
        is_blocking:
          type: boolean
        line_number:
          type: integer
        line_merged:
          type: string
        meta:
          type: object
          additionalProperties: {}
      required:
        - error
        - is_blocking
        - line_merged
        - line_number
        - meta
    FileErrors:
      type: object
      properties:
        sourcing_forecast:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        sourcing_history:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        production:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        production_history:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
        global_errors:
          type: array
          items:
            $ref: "#/components/schemas/FileError"
      required:
        - global_errors
        - production
        - production_history
        - sourcing_forecast
        - sourcing_history
    FileTypeEnum:
      enum:
        - SOURCING
        - DECISION
      type: string
      description: |-
        * `SOURCING` - SOURCING
        * `DECISION` - DECISION
    GenericCertificate:
      type: object
      properties:
        certificate_id:
          type: string
          maxLength: 64
        certificate_type:
          $ref: "#/components/schemas/CertificateTypeEnum"
        certificate_holder:
          type: string
          maxLength: 512
        certificate_issuer:
          type: string
          nullable: true
          maxLength: 256
        address:
          type: string
          nullable: true
          maxLength: 512
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        download_link:
          type: string
          nullable: true
          maxLength: 512
        scope:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
      required:
        - certificate_holder
        - certificate_id
        - certificate_type
        - valid_from
        - valid_until
    GesOptionEnum:
      enum:
        - Default
        - Actual
        - NUTS2
      type: string
      description: |-
        * `Default` - Valeurs par défaut
        * `Actual` - Valeurs réelles
        * `NUTS2` - Valeurs NUTS2
    GroupAssignmentResponse:
      type: object
      properties:
        assigned_tickets_count:
          type: integer
      required:
        - assigned_tickets_count
    LotRequest:
      type: object
      properties:
        id:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - emission_rate_per_mj
        - id
        - volume
    LotStatusEnum:
      enum:
        - DRAFT
        - PENDING
        - ACCEPTED
        - REJECTED
        - FROZEN
        - DELETED
      type: string
      description: |-
        * `DRAFT` - DRAFT
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
        * `FROZEN` - FROZEN
        * `DELETED` - DELETED
    NavStats:
      type: object
      properties:
        total_pending_action_for_admin:
          type: integer
        pending_draft_lots:
          type: integer
        in_pending_lots:
          type: integer
        doublecount_agreement_pending:
          type: integer
        charge_point_registration_pending:
          type: integer
        metering_reading_pending:
          type: integer
        pending_transfer_certificates:
          type: integer
        audits:
          type: integer
        tickets:
          type: integer
    OperationDetail:
      type: object
      properties:
        lot:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - lot
    OperationDetailRequest:
      type: object
      properties:
        lot:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - lot
    OperationInputRequest:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/TypeEnum"
        customs_category:
          $ref: "#/components/schemas/CustomsCategoryEnum"
        biofuel:
          type: integer
          nullable: true
        credited_entity:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        from_depot:
          type: integer
          nullable: true
        to_depot:
          type: integer
          nullable: true
        validity_date:
          type: string
          format: date
        lots:
          type: array
          items:
            $ref: "#/components/schemas/LotRequest"
      required:
        - biofuel
        - customs_category
        - debited_entity
        - lots
        - type
        - validity_date
    OperationOutput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          $ref: "#/components/schemas/OperationOutputStatusEnum"
        sector:
          type: string
          readOnly: true
        customs_category:
          $ref: "#/components/schemas/CustomsCategoryEnum"
        biofuel:
          type: string
          readOnly: true
        credited_entity:
          $ref: "#/components/schemas/Entity"
        debited_entity:
          $ref: "#/components/schemas/Entity"
        from_depot:
          $ref: "#/components/schemas/Depot"
        to_depot:
          $ref: "#/components/schemas/Depot"
        created_at:
          type: string
          format: date-time
          readOnly: true
        validity_date:
          type: string
          format: date
        volume:
          type: string
          readOnly: true
        unit:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: "#/components/schemas/OperationDetail"
      required:
        - biofuel
        - created_at
        - credited_entity
        - debited_entity
        - from_depot
        - id
        - sector
        - to_depot
        - type
        - unit
        - validity_date
        - volume
    OperationOutputRequest:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/OperationOutputStatusEnum"
        customs_category:
          $ref: "#/components/schemas/CustomsCategoryEnum"
        credited_entity:
          $ref: "#/components/schemas/EntityRequest"
        debited_entity:
          $ref: "#/components/schemas/EntityRequest"
        from_depot:
          $ref: "#/components/schemas/DepotRequest"
        to_depot:
          $ref: "#/components/schemas/DepotRequest"
        validity_date:
          type: string
          format: date
        details:
          type: array
          items:
            $ref: "#/components/schemas/OperationDetailRequest"
      required:
        - credited_entity
        - debited_entity
        - from_depot
        - to_depot
        - validity_date
    OperationOutputStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - CANCELED
      type: string
      description: |-
        * `PENDING` - PENDING
        * `ACCEPTED` - ACCEPTED
        * `REJECTED` - REJECTED
        * `CANCELED` - CANCELED
    OtpResponse:
      type: object
      properties:
        valid_until:
          type: string
      required:
        - valid_until
    PaginatedEntityPreviewList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/EntityPreview"
    PaginatedOperationOutputList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/OperationOutput"
    PaginatedSafTicketList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/SafTicket"
    PaginatedSafTicketSourceList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/SafTicketSource"
    PatchedOperationOutputRequest:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/OperationOutputStatusEnum"
        customs_category:
          $ref: "#/components/schemas/CustomsCategoryEnum"
        credited_entity:
          $ref: "#/components/schemas/EntityRequest"
        debited_entity:
          $ref: "#/components/schemas/EntityRequest"
        from_depot:
          $ref: "#/components/schemas/DepotRequest"
        to_depot:
          $ref: "#/components/schemas/DepotRequest"
        validity_date:
          type: string
          format: date
        details:
          type: array
          items:
            $ref: "#/components/schemas/OperationDetailRequest"
    PreferredUnitEnum:
      enum:
        - l
        - kg
        - MJ
      type: string
      description: |-
        * `l` - litres
        * `kg` - kg
        * `MJ` - MJ
    ProductionSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        producer:
          allOf:
            - $ref: "#/components/schemas/Entity"
          readOnly: true
        name:
          type: string
          maxLength: 128
        country:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        date_mise_en_service:
          type: string
          format: date
          nullable: true
        ges_option:
          $ref: "#/components/schemas/GesOptionEnum"
        eligible_dc:
          type: boolean
        dc_reference:
          type: string
          maxLength: 64
        site_siret:
          type: string
          maxLength: 64
        address:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 128
        postal_code:
          type: string
          maxLength: 32
        gps_coordinates:
          type: string
          nullable: true
          maxLength: 64
        manager_name:
          type: string
          maxLength: 64
        manager_phone:
          type: string
          maxLength: 64
        manager_email:
          type: string
          maxLength: 64
      required:
        - country
        - id
        - name
        - producer
    ProductionSiteCertificate:
      type: object
      properties:
        certificate_id:
          type: string
          maxLength: 64
        certificate_type:
          $ref: "#/components/schemas/CertificateTypeEnum"
        certificate_holder:
          type: string
          maxLength: 512
        certificate_issuer:
          type: string
          nullable: true
          maxLength: 256
        address:
          type: string
          nullable: true
          maxLength: 512
        valid_from:
          type: string
          format: date
        valid_until:
          type: string
          format: date
        download_link:
          type: string
          nullable: true
          maxLength: 512
        scope:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
      required:
        - certificate_holder
        - certificate_id
        - certificate_type
        - valid_from
        - valid_until
    RejectDoubleCountingRequest:
      type: object
      properties:
        dca_id:
          type: integer
      required:
        - dca_id
    RequestAccessRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        role:
          type: string
          minLength: 1
        entity_id:
          type: integer
      required:
        - entity_id
        - role
    RequestPasswordResetRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
      required:
        - username
    ResetPasswordRequest:
      type: object
      properties:
        uidb64:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
          title: Mot de passe
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirmation du mot de passe
      required:
        - password1
        - password2
        - token
        - uidb64
    Response:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    ResponseSuccess:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    RevokeAccessRequest:
      type: object
      properties:
        entity_id:
          type: integer
      required:
        - entity_id
    RoleEnum:
      enum:
        - RO
        - RW
        - ADMIN
        - AUDITOR
      type: string
      description: |-
        * `RO` - Lecture Seule
        * `RW` - Lecture/Écriture
        * `ADMIN` - Administrateur
        * `AUDITOR` - Auditeur
      x-enum-varnames:
        - ReadOnly
        - ReadWrite
        - Admin
        - Auditor
    SafTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        assignment_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        agreement_date:
          type: string
          format: date
          nullable: true
        supplier:
          type: string
          readOnly: true
        client:
          type: string
          readOnly: true
        volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
      required:
        - assignment_period
        - biofuel
        - client
        - country_of_origin
        - feedstock
        - id
        - supplier
        - volume
        - year
    SafTicketDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        assignment_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        supplier:
          type: string
          readOnly: true
        client:
          type: string
          readOnly: true
        free_field:
          type: string
          nullable: true
        agreement_date:
          type: string
          format: date
          nullable: true
        agreement_reference:
          type: string
          nullable: true
          maxLength: 64
        volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_reduction:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
        client_comment:
          type: string
          nullable: true
        parent_ticket_source:
          allOf:
            - $ref: "#/components/schemas/SafTicketSourcePreview"
          readOnly: true
      required:
        - assignment_period
        - biofuel
        - carbure_producer
        - carbure_production_site
        - client
        - country_of_origin
        - created_at
        - feedstock
        - id
        - parent_ticket_source
        - supplier
        - volume
        - year
    SafTicketPreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        client:
          type: string
          readOnly: true
        agreement_date:
          type: string
          format: date
          nullable: true
        volume:
          type: number
          format: double
        status:
          $ref: "#/components/schemas/saf.filters.TicketFilter.status"
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
        - client
        - created_at
        - id
        - volume
    SafTicketSource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        delivery_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        ghg_reduction:
          type: number
          format: double
        assigned_tickets:
          type: array
          items:
            $ref: "#/components/schemas/SafTicketPreview"
          readOnly: true
        parent_lot:
          allOf:
            - $ref: "#/components/schemas/SafTicketSourceParentLot"
          readOnly: true
      required:
        - assigned_tickets
        - assigned_volume
        - biofuel
        - country_of_origin
        - created_at
        - delivery_period
        - feedstock
        - id
        - parent_lot
        - total_volume
        - year
    SafTicketSourceAssignment:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
        agreement_date:
          type: string
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
      required:
        - assignment_period
        - client_id
        - volume
    SafTicketSourceAssignmentRequest:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
          minLength: 1
        agreement_date:
          type: string
          minLength: 1
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
      required:
        - assignment_period
        - client_id
        - volume
    SafTicketSourceDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        delivery_period:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        added_by:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
        feedstock:
          allOf:
            - $ref: "#/components/schemas/FeedStock"
          readOnly: true
        biofuel:
          allOf:
            - $ref: "#/components/schemas/Biofuel"
          readOnly: true
        country_of_origin:
          allOf:
            - $ref: "#/components/schemas/Country"
          readOnly: true
        assigned_tickets:
          type: array
          items:
            $ref: "#/components/schemas/SafTicketPreview"
          readOnly: true
        carbure_producer:
          allOf:
            - $ref: "#/components/schemas/EntityPreview"
          readOnly: true
        unknown_producer:
          type: string
          nullable: true
          maxLength: 64
        carbure_production_site:
          allOf:
            - $ref: "#/components/schemas/ProductionSite"
          readOnly: true
        unknown_production_site:
          type: string
          nullable: true
          maxLength: 64
        production_site_commissioning_date:
          type: string
          format: date
          nullable: true
        eec:
          type: number
          format: double
        el:
          type: number
          format: double
        ep:
          type: number
          format: double
        etd:
          type: number
          format: double
        eu:
          type: number
          format: double
        esca:
          type: number
          format: double
        eccs:
          type: number
          format: double
        eccr:
          type: number
          format: double
        eee:
          type: number
          format: double
        ghg_reduction:
          type: number
          format: double
        ghg_total:
          type: number
          format: double
        parent_lot:
          $ref: "#/components/schemas/CarbureLotPublic"
      required:
        - added_by
        - assigned_tickets
        - assigned_volume
        - biofuel
        - carbure_producer
        - carbure_production_site
        - country_of_origin
        - created_at
        - delivery_period
        - feedstock
        - id
        - parent_lot
        - total_volume
        - year
    SafTicketSourceGroupAssignmentRequest:
      type: object
      properties:
        client_id:
          type: integer
        volume:
          type: number
          format: double
        agreement_reference:
          type: string
          minLength: 1
        agreement_date:
          type: string
          minLength: 1
        free_field:
          type: string
          nullable: true
        assignment_period:
          type: integer
        ticket_sources_ids:
          type: array
          items:
            type: integer
      required:
        - assignment_period
        - client_id
        - ticket_sources_ids
        - volume
    SafTicketSourceParentLot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          maxLength: 64
      required:
        - id
    SafTicketSourcePreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carbure_id:
          type: string
          nullable: true
          maxLength: 64
        total_volume:
          type: number
          format: double
        assigned_volume:
          type: number
          format: double
      required:
        - assigned_volume
        - id
        - total_volume
    SimulationInputRequest:
      type: object
      properties:
        customs_category:
          $ref: "#/components/schemas/CustomsCategoryEnum"
        biofuel:
          type: integer
          nullable: true
        debited_entity:
          type: integer
          nullable: true
        target_volume:
          type: number
          format: double
        target_emission:
          type: number
          format: double
        max_n_batches:
          type: integer
        enforced_volumes:
          type: array
          items:
            type: integer
      required:
        - biofuel
        - customs_category
        - debited_entity
        - target_emission
        - target_volume
    SimulationLotOutput:
      type: object
      properties:
        lot_id:
          type: integer
        volume:
          type: number
          format: double
        emission_rate_per_mj:
          type: number
          format: double
      required:
        - emission_rate_per_mj
        - lot_id
        - volume
    SimulationOutput:
      type: object
      properties:
        selected_lots:
          type: array
          items:
            $ref: "#/components/schemas/SimulationLotOutput"
        fun:
          type: number
          format: double
      required:
        - fun
        - selected_lots
    SiteTypeEnum:
      enum:
        - OTHER
        - EFS
        - EFPE
        - OIL DEPOT
        - BIOFUEL DEPOT
        - HEAT PLANT
        - POWER PLANT
        - COGENERATION PLANT
        - PRODUCTION BIOLIQUID
        - EFCA
      type: string
      description: |-
        * `OTHER` - Autre
        * `EFS` - EFS
        * `EFPE` - EFPE
        * `OIL DEPOT` - OIL DEPOT
        * `BIOFUEL DEPOT` - BIOFUEL DEPOT
        * `HEAT PLANT` - HEAT PLANT
        * `POWER PLANT` - POWER PLANT
        * `COGENERATION PLANT` - COGENERATION PLANT
        * `PRODUCTION BIOLIQUID` - PRODUCTION BIOLIQUID
        * `EFCA` - EFCA
    TransportDocumentTypeEnum:
      enum:
        - DAU
        - DAE
        - DSA
        - DSAC
        - DSP
        - OTHER
      type: string
      description: |-
        * `DAU` - DAU
        * `DAE` - DAE
        * `DSA` - DSA
        * `DSAC` - DSAC
        * `DSP` - DSP
        * `OTHER` - OTHER
    TypeEnum:
      enum:
        - INCORPORATION
        - CESSION
        - TENEUR
        - LIVRAISON_DIRECTE
        - MAC_BIO
        - EXPORTATION
        - DEVALUATION
      type: string
      description: |-
        * `INCORPORATION` - INCORPORATION
        * `CESSION` - CESSION
        * `TENEUR` - TENEUR
        * `LIVRAISON_DIRECTE` - LIVRAISON_DIRECTE
        * `MAC_BIO` - MAC_BIO
        * `EXPORTATION` - EXPORTATION
        * `DEVALUATION` - DEVALUATION
    UpdatedQuotasRequest:
      type: object
      properties:
        approved_quotas:
          type: array
          items:
            type: array
            items:
              type: integer
            maxItems: 2
            minItems: 2
      required:
        - approved_quotas
    UserCreation:
      type: object
      description: |-
        Serializer for creating new users. Includes required fields
        and repeated password validation.
      properties:
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 255
        name:
          type: string
          title: Nom
          maxLength: 255
      required:
        - email
        - name
    UserCreationRequest:
      type: object
      description: |-
        Serializer for creating new users. Includes required fields
        and repeated password validation.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Adresse électronique
          maxLength: 255
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 255
        password1:
          type: string
          writeOnly: true
          minLength: 1
          title: Mot de passe
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirmation du mot de passe
      required:
        - email
        - name
        - password1
        - password2
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        is_enabled:
          type: boolean
          readOnly: true
        entity_type:
          allOf:
            - $ref: "#/components/schemas/EntityTypeEnum"
          readOnly: true
        has_mac:
          type: boolean
          readOnly: true
        has_trading:
          type: boolean
          readOnly: true
        has_direct_deliveries:
          type: boolean
          readOnly: true
        has_stocks:
          type: boolean
          readOnly: true
        legal_name:
          type: string
          readOnly: true
        registration_id:
          type: string
          readOnly: true
        sustainability_officer:
          type: string
          readOnly: true
        sustainability_officer_phone_number:
          type: string
          readOnly: true
        sustainability_officer_email:
          type: string
          readOnly: true
        registered_address:
          type: string
          readOnly: true
        registered_zipcode:
          type: string
          readOnly: true
        registered_city:
          type: string
          readOnly: true
        registered_country:
          $ref: "#/components/schemas/Country"
        default_certificate:
          type: string
          readOnly: true
          nullable: true
        preferred_unit:
          allOf:
            - $ref: "#/components/schemas/PreferredUnitEnum"
          readOnly: true
        has_saf:
          type: boolean
          readOnly: true
        has_elec:
          type: boolean
          readOnly: true
        activity_description:
          type: string
          readOnly: true
        website:
          type: string
          format: uri
          readOnly: true
        vat_number:
          type: string
          readOnly: true
        ext_admin_pages:
          type: array
          items:
            $ref: "#/components/schemas/ExtAdminPagesEnum"
          readOnly: true
      required:
        - activity_description
        - default_certificate
        - entity_type
        - ext_admin_pages
        - has_direct_deliveries
        - has_elec
        - has_mac
        - has_saf
        - has_stocks
        - has_trading
        - id
        - is_enabled
        - legal_name
        - name
        - preferred_unit
        - registered_address
        - registered_city
        - registered_zipcode
        - registration_id
        - sustainability_officer
        - sustainability_officer_email
        - sustainability_officer_phone_number
        - vat_number
        - website
    UserLoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - password
        - username
    UserResendActivationLinkRequest:
      type: object
      description: A serializer for re-sending the user activation email. Includes
        email field only.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
      required:
        - email
    UserRights:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        entity:
          $ref: "#/components/schemas/UserEntity"
        role:
          allOf:
            - $ref: "#/components/schemas/RoleEnum"
          readOnly: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
      required:
        - email
        - entity
        - name
        - role
    UserRightsRequests:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: array
          items:
            type: string
          readOnly: true
        entity:
          $ref: "#/components/schemas/UserEntity"
        date_requested:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: "#/components/schemas/UserRightsRequestsStatusEnum"
          readOnly: true
        comment:
          type: string
          nullable: true
        role:
          allOf:
            - $ref: "#/components/schemas/RoleEnum"
          readOnly: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
      required:
        - date_requested
        - entity
        - id
        - role
        - status
        - user
    UserRightsRequestsStatusEnum:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - REVOKED
      type: string
      description: |-
        * `PENDING` - En attente de validation
        * `ACCEPTED` - Accepté
        * `REJECTED` - Refusé
        * `REVOKED` - Révoqué
      x-enum-varnames:
        - Pending
        - Accepted
        - Rejected
        - Revoked
    UserSettingsResponseSeriaizer:
      type: object
      properties:
        email:
          type: string
          format: email
        rights:
          type: array
          items:
            $ref: "#/components/schemas/UserRights"
        requests:
          type: array
          items:
            $ref: "#/components/schemas/UserRightsRequests"
      required:
        - email
        - requests
        - rights
    VerifyOTPRequest:
      type: object
      description: A serializer for submitting the OTP sent via email. Includes
        otp_token field only.
      properties:
        otp_token:
          type: string
          minLength: 6
          title: Entrez le code à 6 chiffres reçu par email
          pattern: ^\d{6}$
          maxLength: 6
      required:
        - otp_token
    saf.filters.TicketFilter.status:
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
      type: string
      description: |-
        * `PENDING` - En attente
        * `ACCEPTED` - Accepté
        * `REJECTED` - Refusé
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
